{
  "version": 3,
  "sources": [
    "../node_modules/@material-ui/core/esm/Card/Card.js",
    "../node_modules/@material-ui/core/esm/CardActionArea/CardActionArea.js",
    "../node_modules/@material-ui/core/esm/CardMedia/CardMedia.js",
    "../node_modules/@material-ui/core/esm/CardContent/CardContent.js",
    "components/SongCard/SongCard.js"
  ],
  "names": [
    "Card_Card",
    "react",
    "props",
    "ref",
    "classes",
    "className",
    "_props$raised",
    "raised",
    "other",
    "Object",
    "objectWithoutProperties",
    "Paper",
    "esm_extends",
    "clsx_m",
    "root",
    "elevation",
    "esm_Card_Card",
    "withStyles",
    "overflow",
    "name",
    "CardActionArea_CardActionArea",
    "children",
    "focusVisibleClassName",
    "ButtonBase",
    "focusVisible",
    "focusHighlight",
    "esm_CardActionArea_CardActionArea",
    "theme",
    "display",
    "textAlign",
    "width",
    "&:hover $focusHighlight",
    "opacity",
    "palette",
    "action",
    "hoverOpacity",
    "&$focusVisible $focusHighlight",
    "pointerEvents",
    "position",
    "top",
    "right",
    "bottom",
    "left",
    "borderRadius",
    "backgroundColor",
    "transition",
    "transitions",
    "create",
    "duration",
    "short",
    "MEDIA_COMPONENTS",
    "CardMedia_CardMedia",
    "_props$component",
    "component",
    "Component",
    "image",
    "src",
    "style",
    "isMediaComponent",
    "indexOf",
    "composedStyle",
    "backgroundImage",
    "concat",
    "media",
    "img",
    "undefined",
    "esm_CardMedia_CardMedia",
    "backgroundSize",
    "backgroundRepeat",
    "backgroundPosition",
    "objectFit",
    "CardContent_CardContent",
    "esm_CardContent_CardContent",
    "padding",
    "&:last-child",
    "paddingBottom",
    "SongCard",
    "str",
    "video_",
    "video",
    "snippet",
    "react_default",
    "a",
    "createElement",
    "onClick",
    "onPlay",
    "key_",
    "list",
    "alt",
    "height",
    "thumbnail",
    "thumbnails",
    "standard",
    "url",
    "title",
    "replace",
    "loading",
    "Typography",
    "gutterBottom",
    "variant",
    "slice",
    "color",
    "description",
    "channelTitle",
    "defaultProps"
  ],
  "mappings": "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",
  "file": "static/js/11.b8acd2b5.chunk.js",
  "sourcesContent": [
    "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);",
    "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'block',\n      textAlign: 'inherit',\n      width: '100%',\n      '&:hover $focusHighlight': {\n        opacity: theme.palette.action.hoverOpacity\n      },\n      '&$focusVisible $focusHighlight': {\n        opacity: 0.12\n      }\n    },\n\n    /* Pseudo-class applied to the ButtonBase root element if the action area is keyboard focused. */\n    focusVisible: {},\n\n    /* Styles applied to the overlay that covers the action area when it is keyboard focused. */\n    focusHighlight: {\n      overflow: 'hidden',\n      pointerEvents: 'none',\n      position: 'absolute',\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n      borderRadius: 'inherit',\n      opacity: 0,\n      backgroundColor: 'currentcolor',\n      transition: theme.transitions.create('opacity', {\n        duration: theme.transitions.duration.short\n      })\n    }\n  };\n};\nvar CardActionArea = /*#__PURE__*/React.forwardRef(function CardActionArea(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      focusVisibleClassName = props.focusVisibleClassName,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"focusVisibleClassName\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, className),\n    focusVisibleClassName: clsx(focusVisibleClassName, classes.focusVisible),\n    ref: ref\n  }, other), children, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.focusHighlight\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActionArea.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActionArea'\n})(CardActionArea);",
    "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { chainPropTypes } from '@material-ui/utils';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'block',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center'\n  },\n\n  /* Styles applied to the root element if `component=\"video, audio, picture, iframe, or img\"`. */\n  media: {\n    width: '100%'\n  },\n\n  /* Styles applied to the root element if `component=\"picture or img\"`. */\n  img: {\n    // ⚠️ object-fit is not supported by IE 11.\n    objectFit: 'cover'\n  }\n};\nvar MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];\nvar CardMedia = /*#__PURE__*/React.forwardRef(function CardMedia(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      image = props.image,\n      src = props.src,\n      style = props.style,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"image\", \"src\", \"style\"]);\n\n  var isMediaComponent = MEDIA_COMPONENTS.indexOf(Component) !== -1;\n  var composedStyle = !isMediaComponent && image ? _extends({\n    backgroundImage: \"url(\\\"\".concat(image, \"\\\")\")\n  }, style) : style;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, isMediaComponent && classes.media, \"picture img\".indexOf(Component) !== -1 && classes.img),\n    ref: ref,\n    style: composedStyle,\n    src: isMediaComponent ? image || src : undefined\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? CardMedia.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: chainPropTypes(PropTypes.node, function (props) {\n    if (!props.children && !props.image && !props.src && !props.component) {\n      return new Error('Material-UI: Either `children`, `image`, `src` or `component` prop must be specified.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Image to be displayed as a background image.\n   * Either `image` or `src` prop must be specified.\n   * Note that caller must specify height otherwise the image will not be visible.\n   */\n  image: PropTypes.string,\n\n  /**\n   * An alias for `image` property.\n   * Available only with media components.\n   * Media components: `video`, `audio`, `picture`, `iframe`, `img`.\n   */\n  src: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardMedia'\n})(CardMedia);",
    "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = /*#__PURE__*/React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);",
    "import React from 'react';\nimport './SongCard.css';\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport {Typography} from \"@material-ui/core\";\n\n// = {title, description, tags, channelTitle, videoId, thumbnail}\nfunction SongCard(props) {\n    const video_ = props.video.snippet;\n    function unEntity(str){\n        return str.replace(/&amp;/g, \"&\").replace(/&lt;/g, \"<\").replace(/&gt;/g, \">\");\n    }\n\n    return (\n        <Card className={'SongCard'} style={{width: \"18rem\"}} onClick={() => props.onPlay(props.video, props.key_, props.list)}>\n            <CardActionArea>\n                <CardMedia\n                    component=\"img\"\n                    alt=\"Contemplative Reptile\"\n                    height=\"140\"\n                    image={props.thumbnail || video_.thumbnails.standard.url}\n                    title={unEntity(video_.title)}\n                    loading={'lazy'}\n\n                />\n                <CardContent className={'text-left'}>\n                    <Typography gutterBottom variant=\"h6\" component=\"p\" className={'text-truncate'}>\n                        {video_.title.slice(0, 70) + \" ...\"}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" className={'text-truncate'}>\n                        {video_.description.slice(0, 70) + \" ...\"}\n                        <span className={'text-muted'}>\n                        {video_.channelTitle}\n                    </span>\n                    </Typography>\n                </CardContent>\n            </CardActionArea>\n        </Card>\n    );\n}\n\nSongCard.propTypes = {};\n\nSongCard.defaultProps = {};\n\nexport default SongCard;\n"
  ],
  "sourceRoot": ""
}
