{
  "version": 3,
  "sources": [
    "../node_modules/@material-ui/core/esm/utils/useControlled.js",
    "../node_modules/@material-ui/icons/esm/Pause.js",
    "../node_modules/@material-ui/icons/esm/PlayCircleOutline.js",
    "../node_modules/@material-ui/core/esm/Slider/ValueLabel.js",
    "../node_modules/@material-ui/core/esm/Slider/Slider.js"
  ],
  "names": [
    "__webpack_require__",
    "d",
    "__webpack_exports__",
    "useControlled",
    "react__WEBPACK_IMPORTED_MODULE_0__",
    "_ref",
    "controlled",
    "defaultProp",
    "default",
    "isControlled",
    "name",
    "state",
    "undefined",
    "current",
    "_React$useState",
    "valueState",
    "setValue",
    "newValue",
    "react__WEBPACK_IMPORTED_MODULE_0___default",
    "n",
    "_utils_createSvgIcon__WEBPACK_IMPORTED_MODULE_1__",
    "Object",
    "a",
    "createElement",
    "Slider_ValueLabel",
    "withStyles",
    "theme",
    "thumb",
    "&$open",
    "& $offset",
    "transform",
    "open",
    "offset",
    "esm_extends",
    "zIndex",
    "typography",
    "body2",
    "fontSize",
    "pxToRem",
    "lineHeight",
    "transition",
    "transitions",
    "create",
    "duration",
    "shortest",
    "top",
    "transformOrigin",
    "position",
    "circle",
    "display",
    "alignItems",
    "justifyContent",
    "width",
    "height",
    "borderRadius",
    "backgroundColor",
    "label",
    "color",
    "palette",
    "primary",
    "contrastText",
    "props",
    "children",
    "classes",
    "className",
    "value",
    "valueLabelDisplay",
    "react",
    "clsx_m",
    "asc",
    "b",
    "clamp",
    "min",
    "max",
    "Math",
    "findClosest",
    "values",
    "currentValue",
    "reduce",
    "acc",
    "index",
    "distance",
    "abs",
    "trackFinger",
    "event",
    "touchId",
    "changedTouches",
    "i",
    "length",
    "touch",
    "identifier",
    "x",
    "clientX",
    "y",
    "clientY",
    "valueToPercent",
    "roundValueToStep",
    "step",
    "nearest",
    "round",
    "Number",
    "toFixed",
    "num",
    "parts",
    "toExponential",
    "split",
    "matissaDecimalPart",
    "parseInt",
    "decimalPart",
    "toString",
    "getDecimalPrecision",
    "setValueIndex",
    "source",
    "output",
    "slice",
    "focusThumb",
    "_ref2",
    "sliderRef",
    "activeIndex",
    "setActive",
    "contains",
    "document",
    "activeElement",
    "getAttribute",
    "querySelector",
    "concat",
    "focus",
    "axisProps",
    "horizontal",
    "percent",
    "left",
    "leap",
    "horizontal-reverse",
    "right",
    "vertical",
    "bottom",
    "Identity",
    "Slider_Slider",
    "ref",
    "ariaLabel",
    "ariaLabelledby",
    "ariaValuetext",
    "_props$color",
    "_props$component",
    "component",
    "Component",
    "defaultValue",
    "_props$disabled",
    "disabled",
    "getAriaLabel",
    "getAriaValueText",
    "_props$marks",
    "marks",
    "marksProp",
    "_props$max",
    "_props$min",
    "onChange",
    "onChangeCommitted",
    "onMouseDown",
    "_props$orientation",
    "orientation",
    "_props$scale",
    "scale",
    "_props$step",
    "_props$ThumbComponent",
    "ThumbComponent",
    "_props$track",
    "track",
    "valueProp",
    "_props$ValueLabelComp",
    "ValueLabelComponent",
    "_props$valueLabelDisp",
    "_props$valueLabelForm",
    "valueLabelFormat",
    "other",
    "objectWithoutProperties",
    "useTheme",
    "active",
    "_React$useState2",
    "setOpen",
    "_useControlled",
    "_useControlled2",
    "slicedToArray",
    "valueDerived",
    "setValueState",
    "range",
    "Array",
    "isArray",
    "sort",
    "map",
    "toConsumableArray",
    "floor",
    "_",
    "_useIsFocusVisible",
    "useIsFocusVisible",
    "isFocusVisible",
    "onBlurVisible",
    "focusVisibleRef",
    "_React$useState3",
    "focusVisible",
    "setFocusVisible",
    "handleFocusRef",
    "useForkRef",
    "handleRef",
    "handleFocus",
    "useEventCallback",
    "currentTarget",
    "handleBlur",
    "handleMouseOver",
    "handleMouseLeave",
    "isRtl",
    "direction",
    "handleKeyDown",
    "tenPercents",
    "marksValues",
    "mark",
    "marksIndex",
    "indexOf",
    "increaseKey",
    "decreaseKey",
    "key",
    "preventDefault",
    "previousValue",
    "previousIndex",
    "axis",
    "getFingerNewValue",
    "_ref3",
    "finger",
    "_ref3$move",
    "move",
    "values2",
    "_slider$getBoundingCl",
    "getBoundingClientRect",
    "percentToValue",
    "handleTouchMove",
    "_getFingerNewValue",
    "handleTouchEnd",
    "type",
    "doc",
    "ownerDocument",
    "removeEventListener",
    "handleTouchStart",
    "_getFingerNewValue3",
    "addEventListener",
    "slider",
    "handleMouseDown",
    "_getFingerNewValue4",
    "trackOffset",
    "trackLeap",
    "trackStyle",
    "root",
    "capitalize",
    "some",
    "marked",
    "trackFalse",
    "trackInverted",
    "rail",
    "style",
    "join",
    "markActive",
    "data-index",
    "aria-hidden",
    "markLabel",
    "markLabelActive",
    "valueLabel",
    "tabIndex",
    "role",
    "aria-label",
    "aria-labelledby",
    "aria-orientation",
    "aria-valuemax",
    "aria-valuemin",
    "aria-valuenow",
    "aria-valuetext",
    "onKeyDown",
    "onFocus",
    "onBlur",
    "onMouseOver",
    "onMouseLeave",
    "boxSizing",
    "padding",
    "cursor",
    "touchAction",
    "main",
    "WebkitTapHighlightColor",
    "&$disabled",
    "pointerEvents",
    "grey",
    "&$vertical",
    "@media (pointer: coarse)",
    "@media print",
    "colorAdjust",
    "colorPrimary",
    "colorSecondary",
    "secondary",
    "marginBottom",
    "marginRight",
    "opacity",
    "$vertical &",
    "& $track",
    "colorManipulator",
    "& $rail",
    "marginLeft",
    "marginTop",
    "outline",
    "&::after",
    "content",
    "&$focusVisible,&:hover",
    "boxShadow",
    "@media (hover: none)",
    "&$active",
    "&:hover",
    "$vertical &$disabled",
    "thumbColorPrimary",
    "thumbColorSecondary",
    "background",
    "paper",
    "text",
    "whiteSpace"
  ],
  "mappings": "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",
  "file": "static/js/0.58caa2f0.chunk.js",
  "sourcesContent": [
    "/* eslint-disable react-hooks/rules-of-hooks, react-hooks/exhaustive-deps */\nimport * as React from 'react';\nexport default function useControlled(_ref) {\n  var controlled = _ref.controlled,\n      defaultProp = _ref.default,\n      name = _ref.name,\n      _ref$state = _ref.state,\n      state = _ref$state === void 0 ? 'value' : _ref$state;\n\n  var _React$useRef = React.useRef(controlled !== undefined),\n      isControlled = _React$useRef.current;\n\n  var _React$useState = React.useState(defaultProp),\n      valueState = _React$useState[0],\n      setValue = _React$useState[1];\n\n  var value = isControlled ? controlled : valueState;\n\n  if (process.env.NODE_ENV !== 'production') {\n    React.useEffect(function () {\n      if (isControlled !== (controlled !== undefined)) {\n        console.error([\"Material-UI: A component is changing the \".concat(isControlled ? '' : 'un', \"controlled \").concat(state, \" state of \").concat(name, \" to be \").concat(isControlled ? 'un' : '', \"controlled.\"), 'Elements should not switch from uncontrolled to controlled (or vice versa).', \"Decide between using a controlled or uncontrolled \".concat(name, \" \") + 'element for the lifetime of the component.', \"The nature of the state is determined during the first render, it's considered controlled if the value is not `undefined`.\", 'More info: https://fb.me/react-controlled-components'].join('\\n'));\n      }\n    }, [controlled]);\n\n    var _React$useRef2 = React.useRef(defaultProp),\n        defaultValue = _React$useRef2.current;\n\n    React.useEffect(function () {\n      if (!isControlled && defaultValue !== defaultProp) {\n        console.error([\"Material-UI: A component is changing the default \".concat(state, \" state of an uncontrolled \").concat(name, \" after being initialized. \") + \"To suppress this warning opt to use a controlled \".concat(name, \".\")].join('\\n'));\n      }\n    }, [JSON.stringify(defaultProp)]);\n  }\n\n  var setValueIfUncontrolled = React.useCallback(function (newValue) {\n    if (!isControlled) {\n      setValue(newValue);\n    }\n  }, []);\n  return [value, setValueIfUncontrolled];\n}",
    "import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M6 19h4V5H6v14zm8-14v14h4V5h-4z\"\n}), 'Pause');",
    "import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M10 16.5l6-4.5-6-4.5v9zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"\n}), 'PlayCircleOutline');",
    "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\n\nvar styles = function styles(theme) {\n  return {\n    thumb: {\n      '&$open': {\n        '& $offset': {\n          transform: 'scale(1) translateY(-10px)'\n        }\n      }\n    },\n    open: {},\n    offset: _extends({\n      zIndex: 1\n    }, theme.typography.body2, {\n      fontSize: theme.typography.pxToRem(12),\n      lineHeight: 1.2,\n      transition: theme.transitions.create(['transform'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      top: -34,\n      transformOrigin: 'bottom center',\n      transform: 'scale(0)',\n      position: 'absolute'\n    }),\n    circle: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      width: 32,\n      height: 32,\n      borderRadius: '50% 50% 50% 0',\n      backgroundColor: 'currentColor',\n      transform: 'rotate(-45deg)'\n    },\n    label: {\n      color: theme.palette.primary.contrastText,\n      transform: 'rotate(45deg)'\n    }\n  };\n};\n/**\n * @ignore - internal component.\n */\n\n\nfunction ValueLabel(props) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      open = props.open,\n      value = props.value,\n      valueLabelDisplay = props.valueLabelDisplay;\n\n  if (valueLabelDisplay === 'off') {\n    return children;\n  }\n\n  return /*#__PURE__*/React.cloneElement(children, {\n    className: clsx(children.props.className, (open || valueLabelDisplay === 'on') && classes.open, classes.thumb)\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.offset, className)\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.circle\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.label\n  }, value))));\n}\n\nexport default withStyles(styles, {\n  name: 'PrivateValueLabel'\n})(ValueLabel);",
    "import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport useTheme from '../styles/useTheme';\nimport { fade, lighten, darken } from '../styles/colorManipulator';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport ownerDocument from '../utils/ownerDocument';\nimport useEventCallback from '../utils/useEventCallback';\nimport useForkRef from '../utils/useForkRef';\nimport capitalize from '../utils/capitalize';\nimport useControlled from '../utils/useControlled';\nimport ValueLabel from './ValueLabel';\n\nfunction asc(a, b) {\n  return a - b;\n}\n\nfunction clamp(value, min, max) {\n  return Math.min(Math.max(min, value), max);\n}\n\nfunction findClosest(values, currentValue) {\n  var _values$reduce = values.reduce(function (acc, value, index) {\n    var distance = Math.abs(currentValue - value);\n\n    if (acc === null || distance < acc.distance || distance === acc.distance) {\n      return {\n        distance: distance,\n        index: index\n      };\n    }\n\n    return acc;\n  }, null),\n      closestIndex = _values$reduce.index;\n\n  return closestIndex;\n}\n\nfunction trackFinger(event, touchId) {\n  if (touchId.current !== undefined && event.changedTouches) {\n    for (var i = 0; i < event.changedTouches.length; i += 1) {\n      var touch = event.changedTouches[i];\n\n      if (touch.identifier === touchId.current) {\n        return {\n          x: touch.clientX,\n          y: touch.clientY\n        };\n      }\n    }\n\n    return false;\n  }\n\n  return {\n    x: event.clientX,\n    y: event.clientY\n  };\n}\n\nfunction valueToPercent(value, min, max) {\n  return (value - min) * 100 / (max - min);\n}\n\nfunction percentToValue(percent, min, max) {\n  return (max - min) * percent + min;\n}\n\nfunction getDecimalPrecision(num) {\n  // This handles the case when num is very small (0.00000001), js will turn this into 1e-8.\n  // When num is bigger than 1 or less than -1 it won't get converted to this notation so it's fine.\n  if (Math.abs(num) < 1) {\n    var parts = num.toExponential().split('e-');\n    var matissaDecimalPart = parts[0].split('.')[1];\n    return (matissaDecimalPart ? matissaDecimalPart.length : 0) + parseInt(parts[1], 10);\n  }\n\n  var decimalPart = num.toString().split('.')[1];\n  return decimalPart ? decimalPart.length : 0;\n}\n\nfunction roundValueToStep(value, step, min) {\n  var nearest = Math.round((value - min) / step) * step + min;\n  return Number(nearest.toFixed(getDecimalPrecision(step)));\n}\n\nfunction setValueIndex(_ref) {\n  var values = _ref.values,\n      source = _ref.source,\n      newValue = _ref.newValue,\n      index = _ref.index; // Performance shortcut\n\n  if (values[index] === newValue) {\n    return source;\n  }\n\n  var output = values.slice();\n  output[index] = newValue;\n  return output;\n}\n\nfunction focusThumb(_ref2) {\n  var sliderRef = _ref2.sliderRef,\n      activeIndex = _ref2.activeIndex,\n      setActive = _ref2.setActive;\n\n  if (!sliderRef.current.contains(document.activeElement) || Number(document.activeElement.getAttribute('data-index')) !== activeIndex) {\n    sliderRef.current.querySelector(\"[role=\\\"slider\\\"][data-index=\\\"\".concat(activeIndex, \"\\\"]\")).focus();\n  }\n\n  if (setActive) {\n    setActive(activeIndex);\n  }\n}\n\nvar axisProps = {\n  horizontal: {\n    offset: function offset(percent) {\n      return {\n        left: \"\".concat(percent, \"%\")\n      };\n    },\n    leap: function leap(percent) {\n      return {\n        width: \"\".concat(percent, \"%\")\n      };\n    }\n  },\n  'horizontal-reverse': {\n    offset: function offset(percent) {\n      return {\n        right: \"\".concat(percent, \"%\")\n      };\n    },\n    leap: function leap(percent) {\n      return {\n        width: \"\".concat(percent, \"%\")\n      };\n    }\n  },\n  vertical: {\n    offset: function offset(percent) {\n      return {\n        bottom: \"\".concat(percent, \"%\")\n      };\n    },\n    leap: function leap(percent) {\n      return {\n        height: \"\".concat(percent, \"%\")\n      };\n    }\n  }\n};\n\nvar Identity = function Identity(x) {\n  return x;\n};\n\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      height: 2,\n      width: '100%',\n      boxSizing: 'content-box',\n      padding: '13px 0',\n      display: 'inline-block',\n      position: 'relative',\n      cursor: 'pointer',\n      touchAction: 'none',\n      color: theme.palette.primary.main,\n      WebkitTapHighlightColor: 'transparent',\n      '&$disabled': {\n        pointerEvents: 'none',\n        cursor: 'default',\n        color: theme.palette.grey[400]\n      },\n      '&$vertical': {\n        width: 2,\n        height: '100%',\n        padding: '0 13px'\n      },\n      // The primary input mechanism of the device includes a pointing device of limited accuracy.\n      '@media (pointer: coarse)': {\n        // Reach 42px touch target, about ~8mm on screen.\n        padding: '20px 0',\n        '&$vertical': {\n          padding: '0 20px'\n        }\n      },\n      '@media print': {\n        colorAdjust: 'exact'\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {// TODO v5: move the style here\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `marks` is provided with at least one label. */\n    marked: {\n      marginBottom: 20,\n      '&$vertical': {\n        marginBottom: 'auto',\n        marginRight: 20\n      }\n    },\n\n    /* Pseudo-class applied to the root element if `orientation=\"vertical\"`. */\n    vertical: {},\n\n    /* Pseudo-class applied to the root and thumb element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the rail element. */\n    rail: {\n      display: 'block',\n      position: 'absolute',\n      width: '100%',\n      height: 2,\n      borderRadius: 1,\n      backgroundColor: 'currentColor',\n      opacity: 0.38,\n      '$vertical &': {\n        height: '100%',\n        width: 2\n      }\n    },\n\n    /* Styles applied to the track element. */\n    track: {\n      display: 'block',\n      position: 'absolute',\n      height: 2,\n      borderRadius: 1,\n      backgroundColor: 'currentColor',\n      '$vertical &': {\n        width: 2\n      }\n    },\n\n    /* Styles applied to the track element if `track={false}`. */\n    trackFalse: {\n      '& $track': {\n        display: 'none'\n      }\n    },\n\n    /* Styles applied to the track element if `track=\"inverted\"`. */\n    trackInverted: {\n      '& $track': {\n        backgroundColor: // Same logic as the LinearProgress track color\n        theme.palette.type === 'light' ? lighten(theme.palette.primary.main, 0.62) : darken(theme.palette.primary.main, 0.5)\n      },\n      '& $rail': {\n        opacity: 1\n      }\n    },\n\n    /* Styles applied to the thumb element. */\n    thumb: {\n      position: 'absolute',\n      width: 12,\n      height: 12,\n      marginLeft: -6,\n      marginTop: -5,\n      boxSizing: 'border-box',\n      borderRadius: '50%',\n      outline: 0,\n      backgroundColor: 'currentColor',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      transition: theme.transitions.create(['box-shadow'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&::after': {\n        position: 'absolute',\n        content: '\"\"',\n        borderRadius: '50%',\n        // reach 42px hit target (2 * 15 + thumb diameter)\n        left: -15,\n        top: -15,\n        right: -15,\n        bottom: -15\n      },\n      '&$focusVisible,&:hover': {\n        boxShadow: \"0px 0px 0px 8px \".concat(fade(theme.palette.primary.main, 0.16)),\n        '@media (hover: none)': {\n          boxShadow: 'none'\n        }\n      },\n      '&$active': {\n        boxShadow: \"0px 0px 0px 14px \".concat(fade(theme.palette.primary.main, 0.16))\n      },\n      '&$disabled': {\n        width: 8,\n        height: 8,\n        marginLeft: -4,\n        marginTop: -3,\n        '&:hover': {\n          boxShadow: 'none'\n        }\n      },\n      '$vertical &': {\n        marginLeft: -5,\n        marginBottom: -6\n      },\n      '$vertical &$disabled': {\n        marginLeft: -3,\n        marginBottom: -4\n      }\n    },\n\n    /* Styles applied to the thumb element if `color=\"primary\"`. */\n    thumbColorPrimary: {// TODO v5: move the style here\n    },\n\n    /* Styles applied to the thumb element if `color=\"secondary\"`. */\n    thumbColorSecondary: {\n      '&$focusVisible,&:hover': {\n        boxShadow: \"0px 0px 0px 8px \".concat(fade(theme.palette.secondary.main, 0.16))\n      },\n      '&$active': {\n        boxShadow: \"0px 0px 0px 14px \".concat(fade(theme.palette.secondary.main, 0.16))\n      }\n    },\n\n    /* Pseudo-class applied to the thumb element if it's active. */\n    active: {},\n\n    /* Pseudo-class applied to the thumb element if keyboard focused. */\n    focusVisible: {},\n\n    /* Styles applied to the thumb label element. */\n    valueLabel: {\n      // IE 11 centering bug, to remove from the customization demos once no longer supported\n      left: 'calc(-50% - 4px)'\n    },\n\n    /* Styles applied to the mark element. */\n    mark: {\n      position: 'absolute',\n      width: 2,\n      height: 2,\n      borderRadius: 1,\n      backgroundColor: 'currentColor'\n    },\n\n    /* Styles applied to the mark element if active (depending on the value). */\n    markActive: {\n      backgroundColor: theme.palette.background.paper,\n      opacity: 0.8\n    },\n\n    /* Styles applied to the mark label element. */\n    markLabel: _extends({}, theme.typography.body2, {\n      color: theme.palette.text.secondary,\n      position: 'absolute',\n      top: 26,\n      transform: 'translateX(-50%)',\n      whiteSpace: 'nowrap',\n      '$vertical &': {\n        top: 'auto',\n        left: 26,\n        transform: 'translateY(50%)'\n      },\n      '@media (pointer: coarse)': {\n        top: 40,\n        '$vertical &': {\n          left: 31\n        }\n      }\n    }),\n\n    /* Styles applied to the mark label element if active (depending on the value). */\n    markLabelActive: {\n      color: theme.palette.text.primary\n    }\n  };\n};\nvar Slider = /*#__PURE__*/React.forwardRef(function Slider(props, ref) {\n  var ariaLabel = props['aria-label'],\n      ariaLabelledby = props['aria-labelledby'],\n      ariaValuetext = props['aria-valuetext'],\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'span' : _props$component,\n      defaultValue = props.defaultValue,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      getAriaLabel = props.getAriaLabel,\n      getAriaValueText = props.getAriaValueText,\n      _props$marks = props.marks,\n      marksProp = _props$marks === void 0 ? false : _props$marks,\n      _props$max = props.max,\n      max = _props$max === void 0 ? 100 : _props$max,\n      _props$min = props.min,\n      min = _props$min === void 0 ? 0 : _props$min,\n      name = props.name,\n      onChange = props.onChange,\n      onChangeCommitted = props.onChangeCommitted,\n      onMouseDown = props.onMouseDown,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      _props$scale = props.scale,\n      scale = _props$scale === void 0 ? Identity : _props$scale,\n      _props$step = props.step,\n      step = _props$step === void 0 ? 1 : _props$step,\n      _props$ThumbComponent = props.ThumbComponent,\n      ThumbComponent = _props$ThumbComponent === void 0 ? 'span' : _props$ThumbComponent,\n      _props$track = props.track,\n      track = _props$track === void 0 ? 'normal' : _props$track,\n      valueProp = props.value,\n      _props$ValueLabelComp = props.ValueLabelComponent,\n      ValueLabelComponent = _props$ValueLabelComp === void 0 ? ValueLabel : _props$ValueLabelComp,\n      _props$valueLabelDisp = props.valueLabelDisplay,\n      valueLabelDisplay = _props$valueLabelDisp === void 0 ? 'off' : _props$valueLabelDisp,\n      _props$valueLabelForm = props.valueLabelFormat,\n      valueLabelFormat = _props$valueLabelForm === void 0 ? Identity : _props$valueLabelForm,\n      other = _objectWithoutProperties(props, [\"aria-label\", \"aria-labelledby\", \"aria-valuetext\", \"classes\", \"className\", \"color\", \"component\", \"defaultValue\", \"disabled\", \"getAriaLabel\", \"getAriaValueText\", \"marks\", \"max\", \"min\", \"name\", \"onChange\", \"onChangeCommitted\", \"onMouseDown\", \"orientation\", \"scale\", \"step\", \"ThumbComponent\", \"track\", \"value\", \"ValueLabelComponent\", \"valueLabelDisplay\", \"valueLabelFormat\"]);\n\n  var theme = useTheme();\n  var touchId = React.useRef(); // We can't use the :active browser pseudo-classes.\n  // - The active state isn't triggered when clicking on the rail.\n  // - The active state isn't transfered when inversing a range slider.\n\n  var _React$useState = React.useState(-1),\n      active = _React$useState[0],\n      setActive = _React$useState[1];\n\n  var _React$useState2 = React.useState(-1),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var _useControlled = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: 'Slider'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      valueDerived = _useControlled2[0],\n      setValueState = _useControlled2[1];\n\n  var range = Array.isArray(valueDerived);\n  var values = range ? valueDerived.slice().sort(asc) : [valueDerived];\n  values = values.map(function (value) {\n    return clamp(value, min, max);\n  });\n  var marks = marksProp === true && step !== null ? _toConsumableArray(Array(Math.floor((max - min) / step) + 1)).map(function (_, index) {\n    return {\n      value: min + step * index\n    };\n  }) : marksProp || [];\n\n  var _useIsFocusVisible = useIsFocusVisible(),\n      isFocusVisible = _useIsFocusVisible.isFocusVisible,\n      onBlurVisible = _useIsFocusVisible.onBlurVisible,\n      focusVisibleRef = _useIsFocusVisible.ref;\n\n  var _React$useState3 = React.useState(-1),\n      focusVisible = _React$useState3[0],\n      setFocusVisible = _React$useState3[1];\n\n  var sliderRef = React.useRef();\n  var handleFocusRef = useForkRef(focusVisibleRef, sliderRef);\n  var handleRef = useForkRef(ref, handleFocusRef);\n  var handleFocus = useEventCallback(function (event) {\n    var index = Number(event.currentTarget.getAttribute('data-index'));\n\n    if (isFocusVisible(event)) {\n      setFocusVisible(index);\n    }\n\n    setOpen(index);\n  });\n  var handleBlur = useEventCallback(function () {\n    if (focusVisible !== -1) {\n      setFocusVisible(-1);\n      onBlurVisible();\n    }\n\n    setOpen(-1);\n  });\n  var handleMouseOver = useEventCallback(function (event) {\n    var index = Number(event.currentTarget.getAttribute('data-index'));\n    setOpen(index);\n  });\n  var handleMouseLeave = useEventCallback(function () {\n    setOpen(-1);\n  });\n  var isRtl = theme.direction === 'rtl';\n  var handleKeyDown = useEventCallback(function (event) {\n    var index = Number(event.currentTarget.getAttribute('data-index'));\n    var value = values[index];\n    var tenPercents = (max - min) / 10;\n    var marksValues = marks.map(function (mark) {\n      return mark.value;\n    });\n    var marksIndex = marksValues.indexOf(value);\n    var newValue;\n    var increaseKey = isRtl ? 'ArrowLeft' : 'ArrowRight';\n    var decreaseKey = isRtl ? 'ArrowRight' : 'ArrowLeft';\n\n    switch (event.key) {\n      case 'Home':\n        newValue = min;\n        break;\n\n      case 'End':\n        newValue = max;\n        break;\n\n      case 'PageUp':\n        if (step) {\n          newValue = value + tenPercents;\n        }\n\n        break;\n\n      case 'PageDown':\n        if (step) {\n          newValue = value - tenPercents;\n        }\n\n        break;\n\n      case increaseKey:\n      case 'ArrowUp':\n        if (step) {\n          newValue = value + step;\n        } else {\n          newValue = marksValues[marksIndex + 1] || marksValues[marksValues.length - 1];\n        }\n\n        break;\n\n      case decreaseKey:\n      case 'ArrowDown':\n        if (step) {\n          newValue = value - step;\n        } else {\n          newValue = marksValues[marksIndex - 1] || marksValues[0];\n        }\n\n        break;\n\n      default:\n        return;\n    } // Prevent scroll of the page\n\n\n    event.preventDefault();\n\n    if (step) {\n      newValue = roundValueToStep(newValue, step, min);\n    }\n\n    newValue = clamp(newValue, min, max);\n\n    if (range) {\n      var previousValue = newValue;\n      newValue = setValueIndex({\n        values: values,\n        source: valueDerived,\n        newValue: newValue,\n        index: index\n      }).sort(asc);\n      focusThumb({\n        sliderRef: sliderRef,\n        activeIndex: newValue.indexOf(previousValue)\n      });\n    }\n\n    setValueState(newValue);\n    setFocusVisible(index);\n\n    if (onChange) {\n      onChange(event, newValue);\n    }\n\n    if (onChangeCommitted) {\n      onChangeCommitted(event, newValue);\n    }\n  });\n  var previousIndex = React.useRef();\n  var axis = orientation;\n\n  if (isRtl && orientation !== \"vertical\") {\n    axis += '-reverse';\n  }\n\n  var getFingerNewValue = function getFingerNewValue(_ref3) {\n    var finger = _ref3.finger,\n        _ref3$move = _ref3.move,\n        move = _ref3$move === void 0 ? false : _ref3$move,\n        values2 = _ref3.values,\n        source = _ref3.source;\n    var slider = sliderRef.current;\n\n    var _slider$getBoundingCl = slider.getBoundingClientRect(),\n        width = _slider$getBoundingCl.width,\n        height = _slider$getBoundingCl.height,\n        bottom = _slider$getBoundingCl.bottom,\n        left = _slider$getBoundingCl.left;\n\n    var percent;\n\n    if (axis.indexOf('vertical') === 0) {\n      percent = (bottom - finger.y) / height;\n    } else {\n      percent = (finger.x - left) / width;\n    }\n\n    if (axis.indexOf('-reverse') !== -1) {\n      percent = 1 - percent;\n    }\n\n    var newValue;\n    newValue = percentToValue(percent, min, max);\n\n    if (step) {\n      newValue = roundValueToStep(newValue, step, min);\n    } else {\n      var marksValues = marks.map(function (mark) {\n        return mark.value;\n      });\n      var closestIndex = findClosest(marksValues, newValue);\n      newValue = marksValues[closestIndex];\n    }\n\n    newValue = clamp(newValue, min, max);\n    var activeIndex = 0;\n\n    if (range) {\n      if (!move) {\n        activeIndex = findClosest(values2, newValue);\n      } else {\n        activeIndex = previousIndex.current;\n      }\n\n      var previousValue = newValue;\n      newValue = setValueIndex({\n        values: values2,\n        source: source,\n        newValue: newValue,\n        index: activeIndex\n      }).sort(asc);\n      activeIndex = newValue.indexOf(previousValue);\n      previousIndex.current = activeIndex;\n    }\n\n    return {\n      newValue: newValue,\n      activeIndex: activeIndex\n    };\n  };\n\n  var handleTouchMove = useEventCallback(function (event) {\n    var finger = trackFinger(event, touchId);\n\n    if (!finger) {\n      return;\n    }\n\n    var _getFingerNewValue = getFingerNewValue({\n      finger: finger,\n      move: true,\n      values: values,\n      source: valueDerived\n    }),\n        newValue = _getFingerNewValue.newValue,\n        activeIndex = _getFingerNewValue.activeIndex;\n\n    focusThumb({\n      sliderRef: sliderRef,\n      activeIndex: activeIndex,\n      setActive: setActive\n    });\n    setValueState(newValue);\n\n    if (onChange) {\n      onChange(event, newValue);\n    }\n  });\n  var handleTouchEnd = useEventCallback(function (event) {\n    var finger = trackFinger(event, touchId);\n\n    if (!finger) {\n      return;\n    }\n\n    var _getFingerNewValue2 = getFingerNewValue({\n      finger: finger,\n      values: values,\n      source: valueDerived\n    }),\n        newValue = _getFingerNewValue2.newValue;\n\n    setActive(-1);\n\n    if (event.type === 'touchend') {\n      setOpen(-1);\n    }\n\n    if (onChangeCommitted) {\n      onChangeCommitted(event, newValue);\n    }\n\n    touchId.current = undefined;\n    var doc = ownerDocument(sliderRef.current);\n    doc.removeEventListener('mousemove', handleTouchMove);\n    doc.removeEventListener('mouseup', handleTouchEnd);\n    doc.removeEventListener('touchmove', handleTouchMove);\n    doc.removeEventListener('touchend', handleTouchEnd);\n  });\n  var handleTouchStart = useEventCallback(function (event) {\n    // Workaround as Safari has partial support for touchAction: 'none'.\n    event.preventDefault();\n    var touch = event.changedTouches[0];\n\n    if (touch != null) {\n      // A number that uniquely identifies the current finger in the touch session.\n      touchId.current = touch.identifier;\n    }\n\n    var finger = trackFinger(event, touchId);\n\n    var _getFingerNewValue3 = getFingerNewValue({\n      finger: finger,\n      values: values,\n      source: valueDerived\n    }),\n        newValue = _getFingerNewValue3.newValue,\n        activeIndex = _getFingerNewValue3.activeIndex;\n\n    focusThumb({\n      sliderRef: sliderRef,\n      activeIndex: activeIndex,\n      setActive: setActive\n    });\n    setValueState(newValue);\n\n    if (onChange) {\n      onChange(event, newValue);\n    }\n\n    var doc = ownerDocument(sliderRef.current);\n    doc.addEventListener('touchmove', handleTouchMove);\n    doc.addEventListener('touchend', handleTouchEnd);\n  });\n  React.useEffect(function () {\n    var slider = sliderRef.current;\n    slider.addEventListener('touchstart', handleTouchStart);\n    var doc = ownerDocument(slider);\n    return function () {\n      slider.removeEventListener('touchstart', handleTouchStart);\n      doc.removeEventListener('mousemove', handleTouchMove);\n      doc.removeEventListener('mouseup', handleTouchEnd);\n      doc.removeEventListener('touchmove', handleTouchMove);\n      doc.removeEventListener('touchend', handleTouchEnd);\n    };\n  }, [handleTouchEnd, handleTouchMove, handleTouchStart]);\n  var handleMouseDown = useEventCallback(function (event) {\n    if (onMouseDown) {\n      onMouseDown(event);\n    }\n\n    event.preventDefault();\n    var finger = trackFinger(event, touchId);\n\n    var _getFingerNewValue4 = getFingerNewValue({\n      finger: finger,\n      values: values,\n      source: valueDerived\n    }),\n        newValue = _getFingerNewValue4.newValue,\n        activeIndex = _getFingerNewValue4.activeIndex;\n\n    focusThumb({\n      sliderRef: sliderRef,\n      activeIndex: activeIndex,\n      setActive: setActive\n    });\n    setValueState(newValue);\n\n    if (onChange) {\n      onChange(event, newValue);\n    }\n\n    var doc = ownerDocument(sliderRef.current);\n    doc.addEventListener('mousemove', handleTouchMove);\n    doc.addEventListener('mouseup', handleTouchEnd);\n  });\n  var trackOffset = valueToPercent(range ? values[0] : min, min, max);\n  var trackLeap = valueToPercent(values[values.length - 1], min, max) - trackOffset;\n\n  var trackStyle = _extends({}, axisProps[axis].offset(trackOffset), axisProps[axis].leap(trackLeap));\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: handleRef,\n    className: clsx(classes.root, classes[\"color\".concat(capitalize(color))], className, disabled && classes.disabled, marks.length > 0 && marks.some(function (mark) {\n      return mark.label;\n    }) && classes.marked, track === false && classes.trackFalse, orientation === 'vertical' && classes.vertical, track === 'inverted' && classes.trackInverted),\n    onMouseDown: handleMouseDown\n  }, other), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.rail\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.track,\n    style: trackStyle\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    value: values.join(','),\n    name: name,\n    type: \"hidden\"\n  }), marks.map(function (mark, index) {\n    var percent = valueToPercent(mark.value, min, max);\n    var style = axisProps[axis].offset(percent);\n    var markActive;\n\n    if (track === false) {\n      markActive = values.indexOf(mark.value) !== -1;\n    } else {\n      markActive = track === 'normal' && (range ? mark.value >= values[0] && mark.value <= values[values.length - 1] : mark.value <= values[0]) || track === 'inverted' && (range ? mark.value <= values[0] || mark.value >= values[values.length - 1] : mark.value >= values[0]);\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      key: mark.value\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: style,\n      \"data-index\": index,\n      className: clsx(classes.mark, markActive && classes.markActive)\n    }), mark.label != null ? /*#__PURE__*/React.createElement(\"span\", {\n      \"aria-hidden\": true,\n      \"data-index\": index,\n      style: style,\n      className: clsx(classes.markLabel, markActive && classes.markLabelActive)\n    }, mark.label) : null);\n  }), values.map(function (value, index) {\n    var percent = valueToPercent(value, min, max);\n    var style = axisProps[axis].offset(percent);\n    return /*#__PURE__*/React.createElement(ValueLabelComponent, {\n      key: index,\n      valueLabelFormat: valueLabelFormat,\n      valueLabelDisplay: valueLabelDisplay,\n      className: classes.valueLabel,\n      value: typeof valueLabelFormat === 'function' ? valueLabelFormat(scale(value), index) : valueLabelFormat,\n      index: index,\n      open: open === index || active === index || valueLabelDisplay === 'on',\n      disabled: disabled\n    }, /*#__PURE__*/React.createElement(ThumbComponent, {\n      className: clsx(classes.thumb, classes[\"thumbColor\".concat(capitalize(color))], active === index && classes.active, disabled && classes.disabled, focusVisible === index && classes.focusVisible),\n      tabIndex: disabled ? null : 0,\n      role: \"slider\",\n      style: style,\n      \"data-index\": index,\n      \"aria-label\": getAriaLabel ? getAriaLabel(index) : ariaLabel,\n      \"aria-labelledby\": ariaLabelledby,\n      \"aria-orientation\": orientation,\n      \"aria-valuemax\": scale(max),\n      \"aria-valuemin\": scale(min),\n      \"aria-valuenow\": scale(value),\n      \"aria-valuetext\": getAriaValueText ? getAriaValueText(scale(value), index) : ariaValuetext,\n      onKeyDown: handleKeyDown,\n      onFocus: handleFocus,\n      onBlur: handleBlur,\n      onMouseOver: handleMouseOver,\n      onMouseLeave: handleMouseLeave\n    }));\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Slider.propTypes = {\n  /**\n   * The label of the slider.\n   */\n  'aria-label': chainPropTypes(PropTypes.string, function (props) {\n    var range = Array.isArray(props.value || props.defaultValue);\n\n    if (range && props['aria-label'] != null) {\n      return new Error('Material-UI: You need to use the `getAriaLabel` prop instead of `aria-label` when using a range slider.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * The id of the element containing a label for the slider.\n   */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * A string value that provides a user-friendly name for the current value of the slider.\n   */\n  'aria-valuetext': chainPropTypes(PropTypes.string, function (props) {\n    var range = Array.isArray(props.value || props.defaultValue);\n\n    if (range && props['aria-valuetext'] != null) {\n      return new Error('Material-UI: You need to use the `getAriaValueText` prop instead of `aria-valuetext` when using a range slider.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * The default element value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.oneOfType([PropTypes.number, PropTypes.arrayOf(PropTypes.number)]),\n\n  /**\n   * If `true`, the slider will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Accepts a function which returns a string value that provides a user-friendly name for the thumb labels of the slider.\n   *\n   * @param {number} index The thumb label's index to format.\n   * @returns {string}\n   */\n  getAriaLabel: PropTypes.func,\n\n  /**\n   * Accepts a function which returns a string value that provides a user-friendly name for the current value of the slider.\n   *\n   * @param {number} value The thumb label's value to format.\n   * @param {number} index The thumb label's index to format.\n   * @returns {string}\n   */\n  getAriaValueText: PropTypes.func,\n\n  /**\n   * Marks indicate predetermined values to which the user can move the slider.\n   * If `true` the marks will be spaced according the value of the `step` prop.\n   * If an array, it should contain objects with `value` and an optional `label` keys.\n   */\n  marks: PropTypes.oneOfType([PropTypes.bool, PropTypes.array]),\n\n  /**\n   * The maximum allowed value of the slider.\n   * Should not be equal to min.\n   */\n  max: PropTypes.number,\n\n  /**\n   * The minimum allowed value of the slider.\n   * Should not be equal to max.\n   */\n  min: PropTypes.number,\n\n  /**\n   * Name attribute of the hidden `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback function that is fired when the slider's value changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number | number[]} value The new value.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback function that is fired when the `mouseup` is triggered.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number | number[]} value The new value.\n   */\n  onChangeCommitted: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseDown: PropTypes.func,\n\n  /**\n   * The slider orientation.\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * A transformation function, to change the scale of the slider.\n   */\n  scale: PropTypes.func,\n\n  /**\n   * The granularity with which the slider can step through values. (A \"discrete\" slider.)\n   * The `min` prop serves as the origin for the valid values.\n   * We recommend (max - min) to be evenly divisible by the step.\n   *\n   * When step is `null`, the thumb can only be slid onto marks provided with the `marks` prop.\n   */\n  step: PropTypes.number,\n\n  /**\n   * The component used to display the value label.\n   */\n  ThumbComponent: PropTypes.elementType,\n\n  /**\n   * The track presentation:\n   *\n   * - `normal` the track will render a bar representing the slider value.\n   * - `inverted` the track will render a bar representing the remaining slider value.\n   * - `false` the track will render without a bar.\n   */\n  track: PropTypes.oneOf(['normal', false, 'inverted']),\n\n  /**\n   * The value of the slider.\n   * For ranged sliders, provide an array with two values.\n   */\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.arrayOf(PropTypes.number)]),\n\n  /**\n   * The value label component.\n   */\n  ValueLabelComponent: PropTypes.elementType,\n\n  /**\n   * Controls when the value label is displayed:\n   *\n   * - `auto` the value label will display when the thumb is hovered or focused.\n   * - `on` will display persistently.\n   * - `off` will never display.\n   */\n  valueLabelDisplay: PropTypes.oneOf(['on', 'auto', 'off']),\n\n  /**\n   * The format function the value label's value.\n   *\n   * When a function is provided, it should have the following signature:\n   *\n   * - {number} value The value label's value to format\n   * - {number} index The value label's index to format\n   */\n  valueLabelFormat: PropTypes.oneOfType([PropTypes.string, PropTypes.func])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSlider'\n})(Slider);"
  ],
  "sourceRoot": ""
}
