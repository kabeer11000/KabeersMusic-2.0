{
  "version": 3,
  "sources": [
    "../node_modules/@material-ui/core/esm/Button/Button.js",
    "components/SongCard/SongCard.lazy.js",
    "../node_modules/@material-ui/core/esm/Container/Container.js",
    "components/home/home.js"
  ],
  "names": [
    "Button_Button",
    "react",
    "props",
    "ref",
    "children",
    "classes",
    "className",
    "_props$color",
    "color",
    "_props$component",
    "component",
    "_props$disabled",
    "disabled",
    "_props$disableElevati",
    "disableElevation",
    "_props$disableFocusRi",
    "disableFocusRipple",
    "endIconProp",
    "endIcon",
    "focusVisibleClassName",
    "_props$fullWidth",
    "fullWidth",
    "_props$size",
    "size",
    "startIconProp",
    "startIcon",
    "_props$type",
    "type",
    "_props$variant",
    "variant",
    "other",
    "Object",
    "objectWithoutProperties",
    "clsx_m",
    "concat",
    "capitalize",
    "ButtonBase",
    "esm_extends",
    "root",
    "colorInherit",
    "focusRipple",
    "focusVisible",
    "label",
    "esm_Button_Button",
    "withStyles",
    "theme",
    "typography",
    "button",
    "boxSizing",
    "minWidth",
    "padding",
    "borderRadius",
    "shape",
    "palette",
    "text",
    "primary",
    "transition",
    "transitions",
    "create",
    "duration",
    "short",
    "&:hover",
    "textDecoration",
    "backgroundColor",
    "colorManipulator",
    "action",
    "hoverOpacity",
    "@media (hover: none)",
    "&$disabled",
    "width",
    "display",
    "alignItems",
    "justifyContent",
    "textPrimary",
    "main",
    "textSecondary",
    "secondary",
    "outlined",
    "border",
    "disabledBackground",
    "outlinedPrimary",
    "outlinedSecondary",
    "contained",
    "getContrastText",
    "grey",
    "boxShadow",
    "shadows",
    "A100",
    "&$focusVisible",
    "&:active",
    "containedPrimary",
    "contrastText",
    "dark",
    "containedSecondary",
    "borderColor",
    "textSizeSmall",
    "fontSize",
    "pxToRem",
    "textSizeLarge",
    "outlinedSizeSmall",
    "outlinedSizeLarge",
    "containedSizeSmall",
    "containedSizeLarge",
    "sizeSmall",
    "sizeLarge",
    "marginRight",
    "marginLeft",
    "&$iconSizeSmall",
    "iconSizeSmall",
    "& > *:first-child",
    "iconSizeMedium",
    "iconSizeLarge",
    "name",
    "LazySongCard",
    "lazy",
    "__webpack_require__",
    "e",
    "then",
    "bind",
    "SongCard",
    "react_default",
    "a",
    "createElement",
    "fallback",
    "Container_Container",
    "Component",
    "_props$disableGutters",
    "disableGutters",
    "_props$fixed",
    "fixed",
    "_props$maxWidth",
    "maxWidth",
    "String",
    "esm_Container_Container",
    "defineProperty",
    "paddingLeft",
    "spacing",
    "paddingRight",
    "breakpoints",
    "up",
    "keys",
    "values",
    "reduce",
    "acc",
    "breakpoint",
    "value",
    "maxWidthXs",
    "Math",
    "max",
    "xs",
    "maxWidthSm",
    "sm",
    "maxWidthMd",
    "md",
    "maxWidthLg",
    "lg",
    "maxWidthXl",
    "xl",
    "HomeComponent",
    "_useSnackbar",
    "useSnackbar",
    "enqueueSnackbar",
    "_React$useState",
    "closeSnackbar",
    "React",
    "useState",
    "navigator",
    "onLine",
    "errorPage",
    "initAuth",
    "token",
    "fetch",
    "endPoints",
    "getFeedFake",
    "youtube",
    "headers",
    "Headers",
    "Authorization",
    "json",
    "setOther",
    "Fragment",
    "items",
    "map",
    "value1",
    "Typography",
    "title",
    "songs",
    "video",
    "index",
    "SongCard_lazy",
    "onPlay",
    "PlaySong",
    "list",
    "key_",
    "key",
    "thumbnail",
    "snippet",
    "thumbnails",
    "high",
    "url",
    "catch",
    "_React$useState2",
    "slicedToArray",
    "style",
    "position",
    "top",
    "left",
    "transform",
    "src",
    "height",
    "alt",
    "onClick",
    "data",
    "videoID",
    "id",
    "videoId",
    "getSong",
    "console",
    "log",
    "setTimeout",
    "appState",
    "uri",
    "CssBaseline",
    "marginTop",
    "homeComponents",
    "defaultProps",
    "connect",
    "state",
    "home"
  ],
  "mappings": "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",
  "file": "static/js/12.84f43a7b.chunk.js",
  "sourcesContent": [
    "import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.button, {\n      boxSizing: 'border-box',\n      minWidth: 64,\n      padding: '6px 16px',\n      borderRadius: theme.shape.borderRadius,\n      color: theme.palette.text.primary,\n      transition: theme.transitions.create(['background-color', 'box-shadow', 'border'], {\n        duration: theme.transitions.duration.short\n      }),\n      '&:hover': {\n        textDecoration: 'none',\n        backgroundColor: fade(theme.palette.text.primary, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        },\n        '&$disabled': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }),\n\n    /* Styles applied to the span element that wraps the children. */\n    label: {\n      width: '100%',\n      // Ensure the correct width for iOS Safari\n      display: 'inherit',\n      alignItems: 'inherit',\n      justifyContent: 'inherit'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"`. */\n    text: {\n      padding: '6px 8px'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"` and `color=\"primary\"`. */\n    textPrimary: {\n      color: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"` and `color=\"secondary\"`. */\n    textSecondary: {\n      color: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      padding: '5px 15px',\n      border: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'),\n      '&$disabled': {\n        border: \"1px solid \".concat(theme.palette.action.disabledBackground)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"primary\"`. */\n    outlinedPrimary: {\n      color: theme.palette.primary.main,\n      border: \"1px solid \".concat(fade(theme.palette.primary.main, 0.5)),\n      '&:hover': {\n        border: \"1px solid \".concat(theme.palette.primary.main),\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"secondary\"`. */\n    outlinedSecondary: {\n      color: theme.palette.secondary.main,\n      border: \"1px solid \".concat(fade(theme.palette.secondary.main, 0.5)),\n      '&:hover': {\n        border: \"1px solid \".concat(theme.palette.secondary.main),\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        border: \"1px solid \".concat(theme.palette.action.disabled)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"`. */\n    contained: {\n      color: theme.palette.getContrastText(theme.palette.grey[300]),\n      backgroundColor: theme.palette.grey[300],\n      boxShadow: theme.shadows[2],\n      '&:hover': {\n        backgroundColor: theme.palette.grey.A100,\n        boxShadow: theme.shadows[4],\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          boxShadow: theme.shadows[2],\n          backgroundColor: theme.palette.grey[300]\n        },\n        '&$disabled': {\n          backgroundColor: theme.palette.action.disabledBackground\n        }\n      },\n      '&$focusVisible': {\n        boxShadow: theme.shadows[6]\n      },\n      '&:active': {\n        boxShadow: theme.shadows[8]\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled,\n        boxShadow: theme.shadows[0],\n        backgroundColor: theme.palette.action.disabledBackground\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"` and `color=\"primary\"`. */\n    containedPrimary: {\n      color: theme.palette.primary.contrastText,\n      backgroundColor: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.primary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.primary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"` and `color=\"secondary\"`. */\n    containedSecondary: {\n      color: theme.palette.secondary.contrastText,\n      backgroundColor: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.secondary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.secondary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `disableElevation={true}`. */\n    disableElevation: {\n      boxShadow: 'none',\n      '&:hover': {\n        boxShadow: 'none'\n      },\n      '&$focusVisible': {\n        boxShadow: 'none'\n      },\n      '&:active': {\n        boxShadow: 'none'\n      },\n      '&$disabled': {\n        boxShadow: 'none'\n      }\n    },\n\n    /* Pseudo-class applied to the ButtonBase root element if the button is keyboard focused. */\n    focusVisible: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit',\n      borderColor: 'currentColor'\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"text\"`. */\n    textSizeSmall: {\n      padding: '4px 5px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"text\"`. */\n    textSizeLarge: {\n      padding: '8px 11px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"outlined\"`. */\n    outlinedSizeSmall: {\n      padding: '3px 9px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"outlined\"`. */\n    outlinedSizeLarge: {\n      padding: '7px 21px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"contained\"`. */\n    containedSizeSmall: {\n      padding: '4px 10px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"contained\"`. */\n    containedSizeLarge: {\n      padding: '8px 22px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {},\n\n    /* Styles applied to the root element if `size=\"large\"`. */\n    sizeLarge: {},\n\n    /* Styles applied to the root element if `fullWidth={true}`. */\n    fullWidth: {\n      width: '100%'\n    },\n\n    /* Styles applied to the startIcon element if supplied. */\n    startIcon: {\n      display: 'inherit',\n      marginRight: 8,\n      marginLeft: -4,\n      '&$iconSizeSmall': {\n        marginLeft: -2\n      }\n    },\n\n    /* Styles applied to the endIcon element if supplied. */\n    endIcon: {\n      display: 'inherit',\n      marginRight: -4,\n      marginLeft: 8,\n      '&$iconSizeSmall': {\n        marginRight: -2\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"small\"`. */\n    iconSizeSmall: {\n      '& > *:first-child': {\n        fontSize: 18\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"medium\"`. */\n    iconSizeMedium: {\n      '& > *:first-child': {\n        fontSize: 20\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"large\"`. */\n    iconSizeLarge: {\n      '& > *:first-child': {\n        fontSize: 22\n      }\n    }\n  };\n};\nvar Button = /*#__PURE__*/React.forwardRef(function Button(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'button' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableElevati = props.disableElevation,\n      disableElevation = _props$disableElevati === void 0 ? false : _props$disableElevati,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      endIconProp = props.endIcon,\n      focusVisibleClassName = props.focusVisibleClassName,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      startIconProp = props.startIcon,\n      _props$type = props.type,\n      type = _props$type === void 0 ? 'button' : _props$type,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'text' : _props$variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"disableElevation\", \"disableFocusRipple\", \"endIcon\", \"focusVisibleClassName\", \"fullWidth\", \"size\", \"startIcon\", \"type\", \"variant\"]);\n\n  var startIcon = startIconProp && /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.startIcon, classes[\"iconSize\".concat(capitalize(size))])\n  }, startIconProp);\n  var endIcon = endIconProp && /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.endIcon, classes[\"iconSize\".concat(capitalize(size))])\n  }, endIconProp);\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, classes[variant], className, color === 'inherit' ? classes.colorInherit : color !== 'default' && classes[\"\".concat(variant).concat(capitalize(color))], size !== 'medium' && [classes[\"\".concat(variant, \"Size\").concat(capitalize(size))], classes[\"size\".concat(capitalize(size))]], disableElevation && classes.disableElevation, disabled && classes.disabled, fullWidth && classes.fullWidth),\n    component: component,\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n    ref: ref,\n    type: type\n  }, other), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.label\n  }, startIcon, children, endIcon));\n});\nprocess.env.NODE_ENV !== \"production\" ? Button.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the button.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the button will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, no elevation is used.\n   */\n  disableElevation: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple will be disabled.\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `focusVisibleClassName`.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * Element placed after the children.\n   */\n  endIcon: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * If `true`, the button will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The URL to link to when the button is clicked.\n   * If defined, an `a` element will be used as the root node.\n   */\n  href: PropTypes.string,\n\n  /**\n   * The size of the button.\n   * `small` is equivalent to the dense button styling.\n   */\n  size: PropTypes.oneOf(['large', 'medium', 'small']),\n\n  /**\n   * Element placed before the children.\n   */\n  startIcon: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  type: PropTypes.oneOfType([PropTypes.oneOf(['button', 'reset', 'submit']), PropTypes.string]),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['contained', 'outlined', 'text'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiButton'\n})(Button);",
    "import React, {lazy, Suspense} from 'react';\n\nconst LazySongCard = lazy(() => import('./SongCard'));\n\nconst SongCard = props => (\n    <Suspense fallback={null}>\n        <LazySongCard {...props} />\n    </Suspense>\n);\n\nexport default SongCard;\n",
    "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _defineProperty({\n      width: '100%',\n      marginLeft: 'auto',\n      boxSizing: 'border-box',\n      marginRight: 'auto',\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      display: 'block'\n    }, theme.breakpoints.up('sm'), {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }),\n\n    /* Styles applied to the root element if `disableGutters={true}`. */\n    disableGutters: {\n      paddingLeft: 0,\n      paddingRight: 0\n    },\n\n    /* Styles applied to the root element if `fixed={true}`. */\n    fixed: Object.keys(theme.breakpoints.values).reduce(function (acc, breakpoint) {\n      var value = theme.breakpoints.values[breakpoint];\n\n      if (value !== 0) {\n        acc[theme.breakpoints.up(breakpoint)] = {\n          maxWidth: value\n        };\n      }\n\n      return acc;\n    }, {}),\n\n    /* Styles applied to the root element if `maxWidth=\"xs\"`. */\n    maxWidthXs: _defineProperty({}, theme.breakpoints.up('xs'), {\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"sm\"`. */\n    maxWidthSm: _defineProperty({}, theme.breakpoints.up('sm'), {\n      maxWidth: theme.breakpoints.values.sm\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"md\"`. */\n    maxWidthMd: _defineProperty({}, theme.breakpoints.up('md'), {\n      maxWidth: theme.breakpoints.values.md\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"lg\"`. */\n    maxWidthLg: _defineProperty({}, theme.breakpoints.up('lg'), {\n      maxWidth: theme.breakpoints.values.lg\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"xl\"`. */\n    maxWidthXl: _defineProperty({}, theme.breakpoints.up('xl'), {\n      maxWidth: theme.breakpoints.values.xl\n    })\n  };\n};\nvar Container = /*#__PURE__*/React.forwardRef(function Container(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$fixed = props.fixed,\n      fixed = _props$fixed === void 0 ? false : _props$fixed,\n      _props$maxWidth = props.maxWidth,\n      maxWidth = _props$maxWidth === void 0 ? 'lg' : _props$maxWidth,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, fixed && classes.fixed, disableGutters && classes.disableGutters, maxWidth !== false && classes[\"maxWidth\".concat(capitalize(String(maxWidth)))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   */\n  maxWidth: PropTypes.oneOf(['lg', 'md', 'sm', 'xl', 'xs', false])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiContainer'\n})(Container);",
    "import React from 'react';\nimport './home.css';\nimport {Button, CssBaseline} from \"@material-ui/core\";\nimport keys from \"../../api/keys/keys\";\nimport endPoints from \"../../api/endpoints/endpoints\";\nimport SongCard from \"../SongCard/SongCard.lazy\";\nimport {getSong} from \"../../functions/songs\";\nimport {useSnackbar} from 'notistack';\nimport {initAuth} from \"../../functions/auth\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {connect} from \"react-redux\";\nimport store from \"../../Redux/store/store\";\nimport {setHomeScreen} from \"../../Redux/actions/actions\";\nlet ListArray = [];\n\n/*\n\n    if (popular && other) {\n        store.dispatch(setHomeScreen(<div>{popular}{other}</div>));\n    }\n */\nconst HomeComponent = (props) => {\n    const {enqueueSnackbar, closeSnackbar} = useSnackbar();\n    const [other, setOther] = React.useState(() => {\n        if (!navigator.onLine) return errorPage;\n        initAuth().then(token => {\n            fetch(endPoints.getFeedFake(keys.youtube), {\n                headers: new Headers({\n                    'Authorization': `Bearer ${token}`\n                })\n            })\n                .then(value => value.json())\n                .then(value => {\n\n                    // ListArray = value.items.songs.items;\n                    setOther(\n                        <React.Fragment>\n                            {\n                                value.items.map(value1 => (\n                                    <div>\n                                        <Typography variant={'h5'} className={'pl-3 text-left'}>\n                                            {value1.title}\n                                        </Typography>\n                                        <Container maxWidth=\"xl\" className={'px-0 mx-0'}>\n                                            <div className={'cardSlider Slider'}>\n                                                {value1.songs.items.map((video, index) => {\n                                                    return (<SongCard onPlay={PlaySong} list={value1.songs} key_={index} key={index} video={video} thumbnail={video.snippet.thumbnails.high.url}/>);\n                                                })}\n                                            </div>\n                                        </Container>\n                                    </div>\n                                ))\n                            }\n                        </React.Fragment>\n                    );\n                }).catch(e => {\n                enqueueSnackbar('Failed to Load Songs');\n                setOther(<div/>);\n            });\n        })\n    });\n\n    function handleReloadButton() {\n    }\n\n    const errorPage = (\n        <div className={'errorPage'}\n             style={{position: 'absolute', top: '50%', left: '50%', transform: 'translate(-50%, -50%)'}}>\n            <img src={'./assets/icons/darkmode_nothingfound.svg'} style={{width: '8rem', height: \"auto\"}}\n                 alt={'Kabeers Music Logo'}/>\n            <br/>\n            <div>No Internet Connection</div>\n            <Button onClick={handleReloadButton}>Retry</Button>\n        </div>\n    );\n\n    function PlaySong(data, index, list) {\n        let videoID = '';\n        if (typeof data.id === 'object') videoID = data.id.videoId;\n        if (typeof data.id === 'string') videoID = data.id;\n        getSong(videoID).then(value => {\n            if (value) {\n                console.log(data);\n                //Avoid the Promise Error\n                setTimeout(function () {\n                    props.appState({\n                        uri: value,\n                        thumbnail: data.snippet.thumbnails.high.url,\n                        video: data,\n                        list: list,\n                        index: index\n                    });\n                }, 100);\n            }\n            /* setAudioElemet(<div/>); setAudioElemet(<Player audio={new Audio(value)} thumbnail={data.snippet.thumbnails.maxres.url} video={data}/> */\n        }).catch(e => {\n            console.log('Cannot Play Song');\n            enqueueSnackbar('Cannot Play Song');\n        });\n    }\n\n    return (\n        <div className=\"home mb-5\">\n            <CssBaseline/>\n            <div style={{marginTop: '5rem'}}>\n                { props.homeComponents ? props.homeComponents : <div>{other}</div>  }\n            </div>\n        </div>\n    );\n};\n\nHomeComponent.propTypes = {};\n\nHomeComponent.defaultProps = {};\nconst mapStateToProps = state => ({\n    homeComponents: state.home\n});\nexport default connect(mapStateToProps)(HomeComponent);\n/// OLD\n"
  ],
  "sourceRoot": ""
}
