{
  "version": 3,
  "sources": [
    "components/Player/CustomSlider.js",
    "components/Player/ComingNext/NextListItem.js",
    "components/Player/ComingNext/ComingNext.js",
    "functions/Helper/commonWords/commonWords.js",
    "functions/Helper/history.js",
    "components/Player/Player.js"
  ],
  "names": [
    "connect",
    "state",
    "componentState",
    "currentSong",
    "audioElement",
    "props",
    "Dialog",
    "react_default",
    "a",
    "createElement",
    "Fragment",
    "_React$useState",
    "React",
    "useState",
    "_React$useState2",
    "Object",
    "slicedToArray",
    "scrubbing",
    "setScrubbing",
    "handleScrubbing",
    "_x",
    "_handleScrubbing",
    "apply",
    "this",
    "arguments",
    "asyncToGenerator",
    "regenerator_default",
    "mark",
    "_callee2",
    "v",
    "wrap",
    "_context2",
    "prev",
    "next",
    "isFinite",
    "currentTime",
    "store",
    "dispatch",
    "setCurrentSongState",
    "getState",
    "videoElement",
    "reOpenDialog",
    "playList",
    "stop",
    "useEffect",
    "setInterval",
    "paused",
    "Slider",
    "className",
    "defaultValue",
    "value",
    "min",
    "color",
    "max",
    "duration",
    "valueLabelDisplay",
    "thumbColorPrimary",
    "onChangeCommitted",
    "_ref",
    "_callee",
    "x",
    "_context",
    "abrupt",
    "_x2",
    "_x3",
    "useStyles",
    "makeStyles",
    "theme",
    "inline",
    "display",
    "NextListItem",
    "classes",
    "ListItem",
    "alignItems",
    "selected",
    "currentIndex",
    "keyIndex",
    "onClick",
    "ListItemAvatar",
    "Avatar",
    "alt",
    "title",
    "src",
    "image",
    "ListItemText",
    "primary",
    "secondary",
    "Typography",
    "component",
    "variant",
    "concat",
    "channelTitle",
    "defaultProps",
    "root",
    "width",
    "heading",
    "fontSize",
    "typography",
    "pxToRem",
    "fontWeight",
    "fontWeightRegular",
    "ComingNext",
    "list",
    "setList",
    "_React$useState3",
    "AutoPlaySwitch",
    "_React$useState4",
    "autoPlaySwitch",
    "setAutoPlaySwitch",
    "listItems",
    "items",
    "map",
    "index",
    "ComingNext_NextListItem",
    "key",
    "snippet",
    "thumbnails",
    "high",
    "url",
    "listItemsWithDividers",
    "forEach",
    "item",
    "push",
    "undefined",
    "Divider",
    "Accordion",
    "square",
    "AccordionSummary",
    "expandIcon",
    "ExpandMore",
    "aria-controls",
    "id",
    "style",
    "justifyContent",
    "LibraryMusic",
    "Switch",
    "checked",
    "onChange",
    "event",
    "defineProperty",
    "target",
    "name",
    "AccordionDetails",
    "maxHeight",
    "overflowY",
    "List",
    "commonWords",
    "uniqueText",
    "text",
    "result",
    "toLowerCase",
    "replace",
    "split",
    "filter",
    "word",
    "indexOf",
    "pos",
    "self",
    "video",
    "callback",
    "_args2",
    "length",
    "initAuth",
    "then",
    "token",
    "description",
    "substring",
    "desc",
    "videoID",
    "videoId",
    "object",
    "options",
    "method",
    "body",
    "time",
    "Date",
    "getTime",
    "user_id",
    "userId",
    "video_id",
    "artist_name",
    "tags",
    "yt_catagory",
    "video_title",
    "video_keywords",
    "toConsumableArray",
    "video_featuring_artists",
    "video_description",
    "entries",
    "_ref2",
    "encodeURIComponent",
    "join",
    "headers",
    "Headers",
    "Content-Type",
    "Authorization",
    "fetch",
    "endPoints",
    "saveWatchHistory",
    "catch",
    "e",
    "Transition",
    "forwardRef",
    "ref",
    "Slide",
    "assign",
    "direction",
    "Player",
    "hidden",
    "open",
    "setOpen",
    "IconButton",
    "colorSecondary",
    "pauseAudio",
    "Pause",
    "button",
    "setButton",
    "_React$useState5",
    "backgroundColor",
    "loop",
    "setLooping",
    "Loop",
    "_React$useState6",
    "looping",
    "_React$useState7",
    "_React$useState8",
    "downloadButton",
    "setDownloadButton",
    "_useSnackbar",
    "useSnackbar",
    "enqueueSnackbar",
    "handleClose",
    "closeSnackbar",
    "addToReduxState",
    "ReOpen",
    "AppState",
    "MiniPlayer",
    "_addToHistory",
    "saveToHistory",
    "thumbnail",
    "rating",
    "playAudio",
    "play",
    "downloadAudio",
    "downloadSong",
    "pause",
    "PlayCircleOutline",
    "SkipSong",
    "data",
    "getSong",
    "setTimeout",
    "changes",
    "uri",
    "console",
    "log",
    "artist",
    "artwork",
    "sizes",
    "type",
    "navigator",
    "mediaSession",
    "metadata",
    "window",
    "MediaMetadata",
    "album",
    "setActionHandler",
    "addToHistory",
    "_saveHistoryToServer",
    "saveHistoryToServer",
    "isOfflineAvailable",
    "Done",
    "GetApp",
    "document",
    "addEventListener",
    "fullScreen",
    "onClose",
    "TransitionComponent",
    "AppBar",
    "Toolbar",
    "edge",
    "aria-label",
    "ArrowBack",
    "opacity",
    "flex",
    "height",
    "position",
    "top",
    "left",
    "transform",
    "bottom",
    "Player_CustomSlider",
    "SkipPrevious",
    "disabled",
    "SkipNext",
    "Player_ComingNext_ComingNext"
  ],
  "mappings": "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",
  "file": "static/js/8.40b06cf7.chunk.js",
  "sourcesContent": [
    "import React, {useEffect} from \"react\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport store from \"../../Redux/store/store\";\r\nimport {setCurrentSongState} from \"../../Redux/actions/actions\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst CustomSlider = (props) => {\r\n    if (!props.componentState.Dialog) return <></>;\r\n    const [scrubbing, setScrubbing] = React.useState(0);\r\n\r\n    useEffect(() => {\r\n        if (props.componentState.Dialog) {\r\n            setInterval(() => !props.audioElement.paused && props.componentState.Dialog ? setScrubbing(props.audioElement.currentTime) : null, 1000);\r\n        }\r\n    }, []);\r\n\r\n    async function handleScrubbing(v) {\r\n        if (isFinite(v)) {\r\n            props.audioElement.currentTime = v;\r\n            // Update Redux State\r\n            store.dispatch(setCurrentSongState(\r\n                props.audioElement,\r\n                store.getState().currentSong.videoElement,\r\n                store.getState().currentSong.componentState,\r\n                store.getState().currentSong.reOpenDialog,\r\n                store.getState().currentSong.playList));\r\n        }\r\n    }\r\n\r\n    return (<Slider\r\n        className={'container PlayerSlider'}\r\n        defaultValue={0}\r\n        value={scrubbing}\r\n        min={0.0}\r\n        color={'primary.player.slider'}\r\n        max={props.audioElement.duration}\r\n        valueLabelDisplay=\"auto\"\r\n        thumbColorPrimary={'#000'}\r\n        onChangeCommitted={async (v, x) => handleScrubbing(x)}\r\n    />);\r\n};\r\nconst mapStateToProps = state => ({\r\n    componentState: state.currentSong.componentState,\r\n    audioElement: state.currentSong.audioElement,\r\n});\r\nexport default connect(mapStateToProps)(CustomSlider);\r\n",
    "import React from 'react';\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Typography from \"@material-ui/core/Typography\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\nconst useStyles = makeStyles((theme) => ({\n    inline: {\n        display: 'inline',\n    },\n}));\nconst NextListItem = (props) => {\n\n    const classes = useStyles();\n    return (\n        <ListItem alignItems=\"flex-start\" selected={props.currentIndex === props.keyIndex} className={'p-0 px-1'}\n                  onClick={props.onClick}>\n            <ListItemAvatar>\n                <Avatar alt={props.title} src={props.image}/>\n            </ListItemAvatar>\n            <ListItemText\n                className={'text-truncate'}\n                primary={props.title}\n                secondary={\n                    <React.Fragment>\n                        <Typography\n                            component=\"span\"\n                            variant=\"body2\"\n                            className={`${classes.inline} text-truncate`}\n                            color=\"textPrimary\"\n                        >\n                            <div className={'text-truncate'}>{props.channelTitle}</div>\n                        </Typography>\n                    </React.Fragment>\n                }\n            />\n        </ListItem>)\n};\n\nNextListItem.propTypes = {};\n\nNextListItem.defaultProps = {};\n\nexport default NextListItem;\n",
    "import React, {useEffect} from 'react';\nimport './ComingNext.css';\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport {ExpandMore, LibraryMusic} from \"@material-ui/icons\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {connect} from \"react-redux\";\nimport Divider from \"@material-ui/core/Divider\";\nimport NextListItem from \"./NextListItem\";\nimport List from \"@material-ui/core/List\";\nimport Switch from \"@material-ui/core/Switch\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n        fontWeight: theme.typography.fontWeightRegular,\n    },\n}));\nconst ComingNext = (props) => {\n    const classes = useStyles();\n    const [list, setList] = React.useState(<div/>);\n    const [autoPlaySwitch, setAutoPlaySwitch] = React.useState({\n        AutoPlaySwitch: false,\n    });\n    const handleSwitch = (event) => {\n        setAutoPlaySwitch({[event.target.name]: event.target.checked});\n    };\n\n    function createList() {\n        setList(() => {\n            const array = [];\n            const listItems = props.playList.list.items.map((value, index) => {\n                array.push(<NextListItem currentIndex={index} keyIndex={props.playList.index} key={index}\n                                         title={value.snippet.title} channelTitle={value.snippet.channelTitle}\n                                         image={value.snippet.thumbnails.high.url}/>);\n                return <NextListItem currentIndex={index} keyIndex={props.playList.index} key={index}\n                                     title={value.snippet.title} channelTitle={value.snippet.channelTitle}\n                                     image={value.snippet.thumbnails.high.url}/>;\n            });\n            const listItemsWithDividers = [];\n            listItems.forEach((item, index) => {\n                listItemsWithDividers.push(item);\n                if (listItems[index + 1] !== undefined) {\n                    listItemsWithDividers.push(<Divider variant=\"inset\" component=\"li\"/>)\n                }\n            });\n            return listItemsWithDividers;\n        });\n    }\n\n    useEffect(() => {\n        setList(() => {\n            const listItems = props.playList.list.items.map((value, index) => {\n                return <NextListItem currentIndex={index} keyIndex={props.playList.index} key={index}\n                                     title={value.snippet.title} channelTitle={value.snippet.channelTitle}\n                                     image={value.snippet.thumbnails.high.url}/>;\n            });\n            const listItemsWithDividers = [];\n            listItems.forEach((item, index) => {\n                listItemsWithDividers.push(item);\n                if (listItems[index + 1] !== undefined) {\n                    listItemsWithDividers.push(<Divider variant=\"inset\" component=\"li\"/>)\n                }\n            });\n            return listItemsWithDividers;\n        });\n    }, []);\n// myAudio.addEventListener(\"ended\", function(){\n//      myAudio.currentTime = 0;\n//      console.log(\"ended\");\n// });\n    return (<div className=\"ComingNext\">\n            <Accordion square={true}>\n                <AccordionSummary\n                    expandIcon={<ExpandMore/>}\n                    aria-controls=\"panel1a-content\"\n                    id=\"panel1a-header\">\n                    <div className={'d-inline-flex'} style={{justifyContent: 'space-around'}}>\n                        <LibraryMusic/>\n                        <Typography className={`${classes.heading}`}>Coming Next</Typography>\n                        <Switch\n                            checked={autoPlaySwitch}\n                            onChange={handleSwitch}\n                            name=\"AutoPlaySwitch\"\n                            color=\"primary\"\n                            className={'d-none'}\n                        />\n                    </div>\n                </AccordionSummary>\n                <AccordionDetails style={{maxHeight: \"90vh\", overflowY: \"scroll\"}}>\n                    <List className={'text-truncate'} style={{maxHeight: \"80vh\", overflowY: \"scroll\"}}>\n                        {list}\n                    </List>\n                </AccordionDetails>\n            </Accordion>\n        </div>\n    );\n};\n\nComingNext.propTypes = {};\n\nComingNext.defaultProps = {};\n\nconst mapStateToProps = state => ({\n    componentState: state.currentSong.componentState,\n    audioElement: state.currentSong.audioElement,\n    videoElement: state.currentSong.videoElement,\n    playList: state.currentSong.playList\n});\nexport default connect(mapStateToProps)(ComingNext);\n\n",
    "export default [\"i\",\"a\",\"about\",\"an\",\"and\",\"are\",\"as\",\"at\",\"be\",\"by\",\"com\",\"de\",\"en\",\"for\",\"from\",\"how\",\"in\",\"is\",\"it\",\"la\",\"of\",\"on\",\"or\",\"that\",\"the\",\"this\",\"to\",\"was\",\"what\",\"when\",\"where\",\"who\",\"will\",\"with\",\"und\",\"www\",\"ourselves\",\"hers\",\"between\",\"yourself\",\"but\",\"again\",\"there\",\"once\",\"during\",\"out\",\"very\",\"having\",\"they\",\"own\",\"some\",\"do\",\"its\",\"yours\",\"such\",\"into\",\"most\",\"itself\",\"other\",\"off\",\"s\",\"am\",\"him\",\"each\",\"themselves\",\"until\",\"below\",\"we\",\"these\",\"your\",\"his\",\"through\",\"don\",\"nor\",\"me\",\"were\",\"her\",\"more\",\"himself\",\"down\",\"should\",\"our\",\"their\",\"while\",\"above\",\"both\",\"up\",\"ours\",\"had\",\"she\",\"all\",\"no\",\"any\",\"before\",\"them\",\"same\",\"been\",\"have\",\"does\",\"yourselves\",\"then\",\"because\",\"over\",\"why\",\"so\",\"can\",\"did\",\"not\",\"now\",\"under\",\"he\",\"you\",\"herself\",\"has\",\"just\",\"too\",\"only\",\"myself\",\"which\",\"those\",\"after\",\"few\",\"whom\",\"t\",\"being\",\"if\",\"theirs\",\"my\",\"against\",\"doing\",\"further\",\"here\",\"than\",\"cry\",\"sentence\",\"©\",\"↵\",\"#\",\"!!\",\"?!\",\"??\",\"!?\",\"`\",\"``\",\"''\",\"-lrb-\",\"-rrb-\",\"-lsb-\",\"-rsb-\",\",\",\".\",\":\",\";\",'\"',\"'\",\"?\",\"<\",\">\",\"{\",\"}\",\"[\",\"]\",\"+\",\"-\",\"(\",\")\",\"&\",\"%\",\"$\",\"@\",\"!\",\"^\",\"*\",\"..\",\"...\",\"'ll\",\"'s\",\"'m\",\"aren't\",\"can't\",\"cannot\",\"could\",\"couldn't\",\"didn't\",\"doesn't\",\"don't\",\"hadn't\",\"hasn't\",\"haven't\",\"he'd\",\"he'll\",\"he's\",\"here's\",\"how's\",\"i'd\",\"i'll\",\"i'm\",\"i've\",\"isn't\",\"it's\",\"let's\",\"mustn't\",\"ought\",\"ours \",\"shan't\",\"she'd\",\"she'll\",\"she's\",\"shouldn't\",\"that's\",\"there's\",\"they'd\",\"they'll\",\"they're\",\"they've\",\"wasn't\",\"we'd\",\"we'll\",\"we're\",\"we've\",\"weren't\",\"what's\",\"when's\",\"where's\",\"who's\",\"why's\",\"won't\",\"would\",\"wouldn't\",\"you'd\",\"you'll\",\"you're\",\"you've\",\"###\",\"return\",\"arent\",\"cant\",\"couldnt\",\"didnt\",\"doesnt\",\"dont\",\"hadnt\",\"hasnt\",\"havent\",\"hes\",\"heres\",\"hows\",\"im\",\"isnt\",\"lets\",\"mustnt\",\"shant\",\"shes\",\"shouldnt\",\"thats\",\"theres\",\"theyll\",\"theyre\",\"theyve\",\"wasnt\",\"werent\",\"whats\",\"whens\",\"wheres\",\"whos\",\"whys\",\"wont\",\"wouldnt\",\"youd\",\"youll\",\"youre\",\"youve\"];\r\n",
    "import userId from '../userid';\r\nimport commonWords from \"./commonWords/commonWords\";\r\nimport endPoints from \"../../api/endpoints/endpoints\";\r\nimport {initAuth} from \"../auth\";\r\n\r\nasync function uniqueText(text) {\r\n    const result = text.toLowerCase()\r\n        .replace(/(?:https?|ftp|http):\\/\\/[\\n\\S]+/g, '')\r\n        .replace(/[^\\w\\d ]/g, '').split(' ');\r\n\r\n    return result.filter(function (word) {\r\n        return commonWords.indexOf(word) === -1;\r\n    }).filter(function (item, pos, self) {\r\n        return self.indexOf(item) === pos;\r\n    });\r\n}\r\n\r\n/**\r\n * @param {Object} object\r\n * @return {string}\r\n */\r\nexport function serialize(object) {\r\n    return Object.entries(object)\r\n        .map(([key, value]) => `${encodeURIComponent(key)}=${encodeURIComponent(value)}`)\r\n        .join('&');\r\n}\r\n\r\nexport async function saveHistoryToServer(video, callback = () => {}) {\r\n    initAuth().then(token => {\r\n        uniqueText(video.snippet.description.substring(0, 100)).then(desc => {\r\n            let videoID = '';\r\n            if (typeof video.id === 'object') videoID = video.id.videoId;\r\n            if (typeof video.id === 'string') videoID = video.id;\r\n            const options = {\r\n                method: 'POST',\r\n                body: serialize({\r\n                    time: new Date().getTime(),\r\n                    user_id: userId,\r\n                    video_id: videoID,\r\n                    artist_name: video.snippet.channelTitle,\r\n                    tags: video.snippet.tags || [],\r\n                    yt_catagory: 10,\r\n                    video_title: video.snippet.title,\r\n                    video_keywords: [...desc],\r\n                    video_featuring_artists: video.snippet.title.split(/ft.|feat.|ft|feat/i) || '',\r\n                    video_description: video.snippet.description.substring(0, 100)\r\n                }),\r\n                headers: new Headers({\r\n                    \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n                    \"Authorization\": `Bearer ${token}`\r\n                })\r\n            };\r\n            fetch(endPoints.saveWatchHistory, options)\r\n                .then(() => {\r\n                    callback();\r\n                }).catch(function (e) {\r\n                return e;\r\n            });\r\n        })\r\n    });\r\n}\r\n/*\r\nfetch('https://cdn.jsdelivr.net/gh/kabeer11000/sample-response/yt-api/yt.json')\r\n    .then(value => value.json())\r\n    .then(value => {\r\n        value.items.map(async (v, i) => {\r\n            // await saveHistoryToServer(v);\r\n        })\r\n    });\r\n*/\r\n",
    "import React, {useEffect} from 'react';\nimport './Player.css';\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {ArrowBack, Done, GetApp, Loop, Pause, PlayCircleOutline, SkipNext, SkipPrevious} from \"@material-ui/icons\";\nimport Slide from \"@material-ui/core/Slide\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {downloadSong, getSong, isOfflineAvailable, saveToHistory} from \"../../functions/songs\";\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\nimport * as PropTypes from \"prop-types\";\nimport CustomSlider from \"./CustomSlider\";\nimport {setCurrentSongState} from \"../../Redux/actions/actions\";\nimport store from \"../../Redux/store/store\";\nimport {connect} from \"react-redux\";\nimport {useSnackbar} from 'notistack';\nimport ComingNext from \"./ComingNext/ComingNext\";\nimport {saveHistoryToServer} from \"../../functions/Helper/history\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\nconst MiniPlayerTransition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"down\" ref={ref} {...props} />;\n});\n\nconst Player = (props) => {\n    if (props.hidden) {\n        return <></>;\n    }\n\n\n    const [open, setOpen] = React.useState(store.getState().currentSong.componentState.Dialog);\n    const [button, setButton] = React.useState(<IconButton color={'#60B18A'} colorSecondary={'#60B18A'}\n                                                           onClick={pauseAudio}><Pause color={'#fff'}/></IconButton>);\n    const [looping, setLooping] = React.useState(<IconButton color={\"primary.player.invertButtons.main\"}\n                                                             style={{backgroundColor: \"primary.player.invertButtons.main\"}}\n                                                             onClick={() => {\n                                                                 audioElement.loop = true;\n                                                                 setLooping(<IconButton\n                                                                     color={\"primary.player.invertButtons.invert\"}\n                                                                     onClick={() => {\n                                                                         audioElement.loop = false\n                                                                     }}\n                                                                     style={{backgroundColor: \"primary.player.invertButtons.invert\"}}><Loop/></IconButton>)\n                                                             }}><Loop/></IconButton>);\n    let audioElement = props.audioElement;\n    const [downloadButton, setDownloadButton] = React.useState(<div/>);\n    const {enqueueSnackbar, closeSnackbar} = useSnackbar();\n\n    const handleClose = () => {\n        addToReduxState([false, true]);\n        setOpen(false);\n    };\n\n    const ReOpen = () => {\n        addToReduxState([true, false]);\n        setOpen(true);\n    };\n\n    function addToReduxState(AppState) {\n        if (!AppState) AppState = [store.getState().currentSong.componentState.Dialog, store.getState().currentSong.componentState.MiniPlayer];\n        store.dispatch(setCurrentSongState(audioElement, props.videoElement, {\n            Dialog: AppState[0],\n            MiniPlayer: AppState[1]\n        }, ReOpen, {index: props.playList.index, list: props.playList.list}));\n    }\n\n    async function addToHistory() {\n        saveToHistory({\n            videoId: props.videoElement.id,\n            title: props.videoElement.snippet.title,\n            channelTitle: props.videoElement.snippet.channelTitle,\n            tags: props.videoElement.snippet.tags,\n            thumbnail: props.videoElement.snippet.thumbnails.high.url,\n            rating: 0\n        });\n    }\n\n    function playAudio() {\n        audioElement.play();\n        setButton(<IconButton onClick={pauseAudio}><Pause\n            color={'#fff'}/></IconButton>);\n    }\n\n    function downloadAudio() {\n        let videoID = '';\n        if (typeof props.videoElement.id === 'object') videoID = props.videoElement.id.videoId;\n        if (typeof props.videoElement.id === 'string') videoID = props.videoElement.id;\n\n        downloadSong({\n            videoId: videoID,\n            rating: 0,\n            title: props.videoElement.snippet.title,\n            channelTitle: props.videoElement.snippet.channelTitle,\n            tags: props.videoElement.snippet.tags,\n            videoElement: props.videoElement\n        }).then(() => {\n            enqueueSnackbar('Download Complete');\n        });\n        enqueueSnackbar('Download Started');\n    }\n\n    function HideOnScroll(props) {\n        const {children, window} = props;\n        const trigger = useScrollTrigger({target: window ? window() : undefined});\n        return (\n            <Slide appear={false} direction=\"down\" in={!trigger}>\n                {children}\n            </Slide>\n        );\n    }\n\n    HideOnScroll.propTypes = {\n        children: PropTypes.element.isRequired,\n        /**\n         * Injected by the documentation to work in an iframe.\n         * You won't need it on your project.\n         */\n        window: PropTypes.func,\n    };\n\n    function pauseAudio() {\n        audioElement.pause();\n        setButton(<IconButton className={'PlayerPlayPauseBtn'} onClick={playAudio}><PlayCircleOutline\n            color={'#fff'}/></IconButton>);\n    }\n\n    function addMediaSession(data) {\n        if ('mediaSession' in navigator) {\n            navigator.mediaSession.metadata = new window.MediaMetadata({\n                title: data.title,\n                artist: data.artist,\n                album: data.album,\n                artwork: data.artwork\n            });\n            navigator.mediaSession.setActionHandler('play', function () {\n                playAudio();\n            });\n            navigator.mediaSession.setActionHandler('pause', function () {\n                pauseAudio()\n            });\n        }\n    }\n\n\n    useEffect(() => {\n\n        setTimeout(() => {\n            if (audioElement.paused) {\n                audioElement.play();\n                addMediaSession({\n                    artist: props.videoElement.channelTitle,\n                    title: props.videoElement.title,\n                    artwork: [{\n                        src: props.videoElement.snippet.thumbnails.high.url,\n                        sizes: '96x96',\n                        type: 'image/png'\n                    }]\n                });\n                addToHistory();\n                saveHistoryToServer(props.videoElement);\n                addToReduxState([true, false]);\n                let videoID = '';\n                if (typeof props.videoElement.id === 'object') videoID = props.videoElement.id.videoId;\n                if (typeof props.videoElement.id === 'string') videoID = props.videoElement.id;\n\n                isOfflineAvailable(videoID).then((v) => {\n                    setDownloadButton(v ? <IconButton><Done/></IconButton> :\n                        <IconButton onClick={downloadAudio}><GetApp/></IconButton>);\n                    console.log(v)\n                });\n                document.addEventListener('swiped-down', handleClose);\n            }\n        }, 150)\n    }, []);\n    function SkipSong(data) {\n        let videoID = '';\n        if (typeof data.video.id === 'object') videoID = data.video.id.videoId;\n        if (typeof data.video.id === 'string') videoID = data.video.id;\n        getSong(videoID).then(value => {\n            if (value) {\n                try {\n                    setTimeout(function () {\n                        props.changes({\n                            uri: value,\n                            thumbnail: data.video.snippet.thumbnails.high.url,\n                            video: data.video,\n                            list: props.playList.list,\n                            index: data.index\n                        }).then(() => {\n                            audioElement.pause();\n                            audioElement = null;\n                            setOpen(false);\n                            addToReduxState([false, false])\n                        });\n                    }, 100);\n                } catch (e) {\n                    console.log(e);\n                }\n            }\n        });\n    }\n\n    async function handleScrubbing(v) {\n        if (isFinite(v)) {\n            audioElement.currentTime = v;\n            // Update Redux State\n            //store.dispatch(setCurrentSongState(audioElement, store.getState().currentSong.videoElement, {...store.getState().currentSong.componentState}));\n        }\n    }\n    return (\n        <div className=\"Player\">\n            <div className={'container'}>\n                <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\n                    <AppBar>\n                        <Toolbar>\n                            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\n                                <ArrowBack/>\n                            </IconButton>\n                            <Typography variant={'h6'} component={'div'} className={'py-1 text-truncate'}>\n                                {props.videoElement.snippet.title || 'Untitled'}\n                                <Typography variant={'body2'} style={{opacity: '50%'}}>\n                                    {props.videoElement.snippet.channelTitle || 'Unavailable'}\n                                </Typography>\n                            </Typography>\n                            <div style={{flex: '1 1 auto'}}/>\n                            <>\n                                {\n                                    downloadButton\n                                }\n                            </>\n                        </Toolbar>\n                    </AppBar>\n                    <div style={{backgroundColor: 'primary.dark', height: '100%', width: '100%'}}>\n                        <div\n                            className={'ImageCircle rounded-circle thumbnail'}>\n                            <img src={props.videoElement.snippet.thumbnails.high.url}\n                                 className={'image img-fluid rounded-circle border shadow'}\n                                 style={{\n                                     width: '10rem',\n                                     height: '10rem',\n                                     position: 'absolute',\n                                     top: '42%',\n                                     left: '50%',\n                                     transform: 'translate(-50%, -50%)'\n                                 }} alt={'Thumbnail'}/>\n                        </div>\n                        <div id={'waveForm'} style={{width: '100%'}}/>\n                    </div>\n                    <AppBar color=\"primary\" style={{\n                        position: 'fixed',\n                        top: \"auto\",\n                        bottom: 0,\n                        width: '100%',\n                        backgroundColor: 'light'\n                    }} component={'div'}>\n                        <CustomSlider/>\n\n                        {/* Custom SLIDER\n                        <CustomSlider classnames={'container'} getAudioPosition={getAudioPosition}\n                                      audioElement={audioElement} handleScrubbing={handleScrubbing}/> */}\n                        <div className={'container mb-2'} style={{\n                            width: '70%',\n                            display: 'inline-flex',\n                            justifyContent: 'space-around',\n                            transform: 'translate(0%)'\n                        }}>\n                            {looping}\n                            {props.playList.list.items[props.playList.index - 1] ?\n                                <IconButton><SkipPrevious onClick={() => {\n                                    const item = props.playList.list.items[props.playList.index - 1];\n                                    SkipSong({video: item, index: props.playList.index - 1});\n                                }}/></IconButton> : <IconButton disabled={true}><SkipPrevious/></IconButton>}\n                            <div className={'ExpandedPlayButtonContainer'}>\n                                {button}\n                            </div>\n                            {props.playList.list.items[props.playList.index + 1] ? <IconButton onClick={() => {\n                                const item = props.playList.list.items[props.playList.index + 1];\n                                SkipSong({video: item, index: props.playList.index + 1});\n                            }}><SkipNext/></IconButton> : <IconButton disabled={true}><SkipNext/></IconButton>}\n\n                        </div>\n\n                        <ComingNext/>\n                    </AppBar>\n                </Dialog>\n            </div>\n        </div>\n    );\n};\n\nPlayer.propTypes = {};\nPlayer.defaultProps = {};\n\nconst mapStateToProps = state => ({\n    componentState: state.currentSong.componentState,\n    audioElement: state.currentSong.audioElement,\n    videoElement: state.currentSong.videoElement,\n    playList: state.currentSong.playList\n});\nexport default connect(mapStateToProps)(Player);\n/*\n\n                            {props.playList.list.items[props.index - 1] ? <IconButton><SkipPrevious onClick={() => {\n                                const item = props.playList.list.items[props.playList.index - 1];\n                                SkipSong({video: item, index: props.playList.index - 1});\n                            }}/></IconButton> : <IconButton disabled={true}><SkipPrevious/></IconButton>}\n                            <div className={'ExpandedPlayButtonContainer'}>\n                                {button}\n                            </div>\n                            {props.playList.list.items[props.index + 1] ? <IconButton onClick={() => {\n                                const item = props.playList.list.items[props.playList.index + 1];\n                                SkipSong({video: item, index: props.playList.index + 1});\n                            }}><SkipNext/></IconButton> : <IconButton disabled={true}><SkipNext/></IconButton>}\n\n\n                            <Slider\n                                defaultValue={1.0}\n                                aria-labelledby=\"discrete-slider-small-steps\"\n                                step={0.001}\n                                marks\n                                min={0.0}\n                                max={1.0}\n                                getAriaValueText={handleVolume}\n                                valueLabelDisplay=\"auto\"\n                            />\n */\n"
  ],
  "sourceRoot": ""
}
