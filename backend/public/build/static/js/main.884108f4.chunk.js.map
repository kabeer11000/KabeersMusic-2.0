{
  "version": 3,
  "sources": [
    "functions/getBlob.js",
    "functions/songs.js",
    "components/Player/Player.js",
    "components/SongCard/SongCard.js",
    "components/CustomAppBar/CustomAppBar.js",
    "components/home/home.js",
    "components/CustomBottomNavigation/CustomBottomNavigation.js",
    "components/DownloadListItem/DownloadListItem.js",
    "components/Downloads/Downloads.js",
    "App.js",
    "serviceWorker.js",
    "index.js",
    "api/endpoints/endpoints.js",
    "api/keys/keys.js"
  ],
  "names": [
    "fetchProxiedBlob",
    "url",
    "URL",
    "Promise",
    "resolve",
    "reject",
    "xhr",
    "XMLHttpRequest",
    "open",
    "responseType",
    "onload",
    "status",
    "response",
    "statusText",
    "send",
    "setTimeout",
    "abort",
    "db",
    "Dexie",
    "version",
    "stores",
    "songs",
    "historydb",
    "_callee",
    "data",
    "thumbURL",
    "_yield$Promise$all",
    "_yield$Promise$all2",
    "thumbnailBlob",
    "songBlob",
    "_args",
    "arguments",
    "regenerator_default",
    "a",
    "wrap",
    "_context",
    "prev",
    "next",
    "length",
    "undefined",
    "videoId",
    "rating",
    "console",
    "log",
    "concat",
    "fetch",
    "endPoints",
    "getProxyfiedURI",
    "then",
    "value",
    "json",
    "sent",
    "all",
    "Object",
    "slicedToArray",
    "put",
    "id",
    "state",
    "thumbnail",
    "blob",
    "valid",
    "time",
    "Date",
    "now",
    "v",
    "abrupt",
    "t0",
    "stop",
    "_callee3",
    "key",
    "allSongs",
    "_context3",
    "some",
    "find",
    "_callee4",
    "_context4",
    "toArray",
    "song",
    "_callee6",
    "_context6",
    "Transition",
    "React",
    "forwardRef",
    "props",
    "ref",
    "react_default",
    "createElement",
    "Slide",
    "assign",
    "direction",
    "Player",
    "useStyles",
    "makeStyles",
    "theme",
    "title",
    "marginLeft",
    "spacing",
    "flex",
    "hidden",
    "Fragment",
    "_React$useState",
    "useState",
    "_React$useState2",
    "setOpen",
    "_React$useState3",
    "_React$useState4",
    "scrubbing",
    "setScrubbing",
    "_React$useState5",
    "IconButton",
    "onClick",
    "pauseAudio",
    "Pause",
    "color",
    "_React$useState6",
    "button",
    "setButton",
    "_React$useState7",
    "style",
    "backgroundColor",
    "audioElement",
    "loop",
    "setLooping",
    "Loop",
    "_React$useState8",
    "looping",
    "audio",
    "_React$useState9",
    "_React$useState10",
    "miniplayer",
    "setMiniplayer",
    "_React$useState11",
    "_React$useState12",
    "downloadButton",
    "setDownloadButton",
    "handleClose",
    "closeAll",
    "pause",
    "currentTime",
    "remove",
    "playAudio",
    "play",
    "downloadAudio",
    "_downloadSong",
    "apply",
    "this",
    "downloadSong",
    "video",
    "PlayCircleOutline",
    "handleScrubbing",
    "_x",
    "_handleScrubbing",
    "asyncToGenerator",
    "mark",
    "Math",
    "round",
    "addEventListener",
    "_x4",
    "_isOfflineAvailable",
    "isOfflineAvailable",
    "snippet",
    "Done",
    "GetApp",
    "useEffect",
    "className",
    "src",
    "AppBar",
    "position",
    "top",
    "bottom",
    "width",
    "component",
    "elevation",
    "height",
    "Typography",
    "Close",
    "Slider",
    "defaultValue",
    "min",
    "max",
    "duration",
    "valueLabelDisplay",
    "miniPlayer",
    "Dialog",
    "fullScreen",
    "onClose",
    "TransitionComponent",
    "Toolbar",
    "edge",
    "aria-label",
    "ArrowBack",
    "variant",
    "opacity",
    "channelTitle",
    "backgroundImage",
    "left",
    "transform",
    "onChangeCommitted",
    "_ref2",
    "_callee2",
    "x",
    "_context2",
    "_x2",
    "_x3",
    "display",
    "justifyContent",
    "SkipPrevious",
    "SkipNext",
    "defaultProps",
    "SongCard",
    "video_",
    "Card",
    "onPlay",
    "CardActionArea",
    "CardMedia",
    "alt",
    "image",
    "thumbnails",
    "standard",
    "loading",
    "CardContent",
    "gutterBottom",
    "slice",
    "description",
    "CustomAppBar",
    "Menu",
    "HomeComponent",
    "mostPopularFake",
    "keys",
    "youtube",
    "setPopular",
    "items",
    "map",
    "index",
    "components_SongCard_SongCard",
    "PlaySong",
    "popular",
    "_getSong",
    "getSong",
    "appState",
    "uri",
    "maxres",
    "CssBaseline",
    "components_CustomAppBar_CustomAppBar",
    "marginTop",
    "Container",
    "maxWidth",
    "root",
    "CustomBottomNavigation",
    "classes",
    "setValue",
    "BottomNavigation",
    "onChange",
    "event",
    "newValue",
    "BottomNavigationAction",
    "Link",
    "to",
    "label",
    "icon",
    "Home",
    "LocationOn",
    "Folder",
    "inline",
    "DownloadListItem",
    "ListItem",
    "alignItems",
    "ListItemAvatar",
    "Avatar",
    "ListItemText",
    "primary",
    "secondary",
    "tags",
    "palette",
    "background",
    "paper",
    "Downloads",
    "HistoryItems",
    "setHistoryItems",
    "createList",
    "_getHistory",
    "getHistory",
    "i",
    "divider_",
    "Divider",
    "components_DownloadListItem_DownloadListItem",
    "List",
    "App",
    "Audio",
    "PlayerState",
    "setPlayerState",
    "changeStates",
    "objectSpread",
    "react_router_dom",
    "components_Player_Player",
    "react_router",
    "path",
    "render",
    "home_home",
    "components_CustomBottomNavigation_CustomBottomNavigation",
    "Boolean",
    "window",
    "location",
    "hostname",
    "match",
    "ReactDOM",
    "StrictMode",
    "src_App",
    "document",
    "getElementById",
    "navigator",
    "serviceWorker",
    "ready",
    "registration",
    "unregister",
    "catch",
    "error",
    "message",
    "module",
    "exports",
    "mostPopular",
    "getVideo",
    "getVideoFake"
  ],
  "mappings": "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",
  "file": "static/js/main.884108f4.chunk.js",
  "sourcesContent": [
    "export function fetchProxiedBlob(url) {\r\n    const URL = url;\r\n    return new Promise(function (resolve, reject) {\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.open(\"GET\", \"http://localhost:9000/proxy/\" + URL);\r\n        xhr.responseType = \"blob\";\r\n        xhr.onload = function () {\r\n            var status = xhr.status;\r\n            if (status >= 200 && status < 300) {\r\n                resolve(xhr.response);\r\n            } else {\r\n                reject({\r\n                    status: status,\r\n                    statusText: xhr.statusText\r\n                });\r\n            }\r\n        };\r\n        xhr.send();\r\n        setTimeout(() => {\r\n            xhr.abort();\r\n            xhr.open(\"GET\", \"http://localhost:9000/proxy/\" + URL);\r\n\r\n            xhr.send();\r\n        }, 1000);\r\n    });\r\n}\r\n",
    "import Dexie from \"dexie\";\r\nimport \"dexie-observable\";\r\nimport {fetchProxiedBlob} from \"./getBlob\";\r\nimport endPoints from \"../api/endpoints/endpoints\";\r\n\r\nexport const db = new Dexie(\"KabeersMusic_Songs\");\r\ndb.version(2).stores({\r\n    songs:\r\n        \"id, &videoId, valid, time, rating, blob, state, thumbnail\"\r\n});\r\nconst historydb = new Dexie('KabeersMusic_History');\r\nhistorydb.version(2).stores({\r\n    songs:\r\n        \"id, &videoId, time, rating, thumbnail, channelTitle, title, tags\"\r\n});\r\n\r\nexport async function downloadSong(data = {videoId: null, rating: 0}) {\r\n    try {\r\n        console.log('Download Started');\r\n        const thumbURL = `https://i.ytimg.com/vi/${data.videoId}/hqdefault.jpg`;\r\n        const url = await fetch(endPoints.getProxyfiedURI(data.videoId)).then(value => value.json());\r\n        const [thumbnailBlob, songBlob] = await Promise.all([\r\n            fetchProxiedBlob(thumbURL),\r\n            fetchProxiedBlob(url)\r\n        ]);\r\n        db.songs.put({\r\n            id: data.videoId,\r\n            state: \"downloaded\",\r\n            thumbnail: thumbnailBlob,\r\n            blob: songBlob,\r\n            valid: true,\r\n            time: Date.now(),\r\n            videoId: data.videoId,\r\n            rating: data.rating,\r\n        }).then((v) => {\r\n            console.log(v);\r\n        });\r\n        return true;\r\n\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n}\r\n\r\nexport async function getBlob(key) {\r\n    return await db.songs.get(key);\r\n}\r\n\r\nexport async function getSong(key, id) {\r\n\r\n    return await fetch(endPoints.getProxyfiedURI(id)).then(value => value.json());\r\n    const\r\n        allSongs = await db.songs.toArray();\r\n    if (allSongs.some(value => value.videoId === id)) {\r\n        return allSongs.find(value => value.videoId === id);\r\n    } else {\r\n        return fetch(endPoints.getProxyfiedURI(id)).then(value => value.json());\r\n        // return endPoints.getVideo(key, id);\r\n    }\r\n}\r\n\r\nconsole.log('%20 SongJS Loaded');\r\n//downloadSong({rating: 0, videoId:'iYKXdt0LRs8'});\r\n\r\n\r\n/*\r\n//\r\n// Define your database\r\n//\r\nvar db = new Dexie(\"friend_database\");\r\ndb.version(1).stores({\r\n    songs:\r\n        \"&videoId, valid, time, rating, blob, state, thumbnail\"\r\n});\r\n\r\n//\r\n// Put some data into it\r\n//\r\ndb.songs.put({videoId: \"Porno\", time: Date.now(), rating:0, valid:1, blob:new Blob(), thumbnail:'123'}).then (function(){\r\n    //\r\n    // Then when data is stored, read from it\r\n    //\r\n    return db.songs.get('Porno');\r\n}).then(function (friend) {\r\n    //\r\n    // Display the result\r\n    //\r\n    alert (JSON.stringify(friend));\r\n}).catch(function(error) {\r\n    //\r\n    // Finally don't forget to catch any error\r\n    // that could have happened anywhere in the\r\n    // code blocks above.\r\n    //\r\n    alert (\"Ooops: \" + error);\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        const thumbURL = `https://i.ytimg.com/vi/${data.videoId}/hqdefault.jpg`;\r\n        const url = await fetch(`http://localhost:9000/song?id=${data.videoId}`).then(value => value.json());\r\n        const [thumbnailBlob, songBlob] = await Promise.all([\r\n            fetchProxiedBlob(thumbURL),\r\n            fetchProxiedBlob(url)\r\n        ]);\r\n        db.songs.where('videoId').equals(data.videoId).modify({\r\n            state: \"PORN\",\r\n            thumbnail: 'thumbnailBlob',\r\n            blob: 'songBlob'\r\n        }).then((v)=>{\r\n            console.log(v);\r\n        });\r\n        return true;\r\n\r\n*/\r\nexport async function isOfflineAvailable(videoId) {\r\n    let songs = await db.songs.toArray();\r\n    return songs && songs.some(song => song.videoId === videoId);\r\n}\r\n\r\nexport async function saveToHistory(object) {\r\n    historydb.songs.put({\r\n        id: object.videoId,\r\n        thumbnail: object.thumbnail,\r\n        time: Date.now(),\r\n        videoId: object.videoId,\r\n        rating: object.rating,\r\n    }).then((v) => {\r\n        console.log(v);\r\n    });\r\n}\r\n\r\nexport async function getHistory() {\r\n    return historydb.songs.toArray();\r\n}\r\n",
    "import React, {useEffect} from 'react';\nimport './Player.css';\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {\n    ArrowBack,\n    Close,\n    Done,\n    GetApp,\n    Loop,\n    Pause,\n    PlayCircleOutline,\n    SkipNext,\n    SkipPrevious\n} from \"@material-ui/icons\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Slide from \"@material-ui/core/Slide\";\nimport Slider from \"@material-ui/core/Slider\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {downloadSong, isOfflineAvailable, saveToHistory} from \"../../functions/songs\";\n\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst Player = (props) => {\n    const useStyles = makeStyles((theme) => ({\n        title: {\n            marginLeft: theme.spacing(2),\n            flex: 1,\n        }\n    }));\n    if (props.hidden) {\n        return <></>;\n    }\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(true);\n    //const [voulme, setVolume] = React.useState(1.0);\n    const [scrubbing, setScrubbing] = React.useState(0);\n    const [button, setButton] = React.useState(<IconButton onClick={pauseAudio}><Pause color={'#fff'}/></IconButton>);\n    const [looping, setLooping] = React.useState(<IconButton style={{backgroundColor: \"initial\"}} onClick={() => {\n        audioElement.loop = true;\n        setLooping(<IconButton onClick={() => {\n            audioElement.loop = false\n        }} style={{backgroundColor: '#3F51B5'}}><Loop style={{color: '#FFFFFF'}}/></IconButton>)\n    }}><Loop style={{color: \"initial\"}}/></IconButton>);\n    const audioElement = props.audio;\n    const [miniplayer, setMiniplayer] = React.useState(false);\n    const [downloadButton, setDownloadButton] = React.useState(<div/>);\n    /*\n    const handleClickOpen = () => {\n        audioElement.play();\n        setOpen(true);\n    };\n     */\n    const handleClose = () => {\n        setMiniplayer(true);\n        setOpen(false);\n    };\n\n    const closeAll = () => {\n        audioElement.pause();\n        audioElement.currentTime = 0;\n        audioElement.remove();\n        setMiniplayer(false);\n        setOpen(false);\n    };\n\n    async function addToHistory() {\n        saveToHistory({\n            videoId: props.video.id,\n            title: props.video.title,\n            channelTitle: props.video.snippet.channelTitle,\n            tags: props.video.snippet.tags,\n            thumbnail: props.video.snippet.thumbnails.standard.url,\n            rating: 0\n        });\n    }\n\n    function playAudio() {\n        audioElement.play();\n        setButton(<IconButton onClick={pauseAudio}><Pause\n            color={'#fff'}/></IconButton>);\n    }\n\n    function downloadAudio() {\n        downloadSong({videoId: props.video.id, rating: 0});\n    }\n    /*\n    function handleVolume(v) {\n        setVolume(v);\n        audioElement.volume = v;\n    }*/\n\n    const miniPlayer = () => {\n        if (miniplayer && audioElement.src !== null || '' || undefined) {\n            return (<AppBar color=\"primary\" style={{\n                    position: 'fixed',\n                    top: \"auto\",\n                    bottom: '3.5rem',\n                    width: '100%',\n                    backgroundColor: '#FEFEFE',\n                }} component={'div'} elevation={1} className={'d-inline-flex border-top'}>\n                    <div className={'d-inline-flex'}>\n                        <div onClick={() => {\n                            setOpen(true);\n                            setMiniplayer(false)\n                        }} className={'d-inline-flex'}>\n                            <img src={props.thumbnail} style={{width: '4rem', height: '3rem'}}/>\n                            <Typography component={'span'} className={'text-truncate p-2 pt-0` text-dark'}\n                                        color={'#000'} style={{width: '10em'}}>{props.video.snippet.title || 'Untitled'}\n                            </Typography>\n                        </div>\n                        <div className={`float-right ml-auto`}>\n                            {button}\n                            <IconButton onClick={closeAll}><Close/></IconButton>\n                        </div>\n                    </div>\n                    {<Slider\n                        className={'m-0 p-0'}\n                        defaultValue={0}\n                        value={scrubbing}\n                        min={0.0}\n                        max={audioElement.duration}\n                        valueLabelDisplay=\"auto\"\n                    />}\n                </AppBar>\n            );\n        }\n    };\n\n    function pauseAudio() {\n        audioElement.pause();\n        setButton(<IconButton onClick={playAudio}><PlayCircleOutline color={'#fff'}/></IconButton>);\n    }\n\n    audioElement.addEventListener(\"timeupdate\", async () => {\n        setScrubbing(Math.round(audioElement.currentTime));\n    });\n    isOfflineAvailable(props.video.snippet.videoId)\n        .then(value => {\n            setDownloadButton(value ? <IconButton color={'#FFF'}><Done/></IconButton> :\n                <IconButton color={'#FFF'} onClick={downloadAudio}><GetApp/></IconButton>);\n        });\n\n    async function handleScrubbing(v) {\n        setScrubbing(Math.round(v));\n        audioElement.currentTime = Math.round(v);\n    }\n\n    useEffect(() => {\n        audioElement.play();\n    }, []);\n    return (\n        <div className=\"Player\">\n            <div className={'container'}>\n                {miniPlayer()}\n                <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\n                    <AppBar>\n                        <Toolbar>\n                            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\n                                <ArrowBack/>\n                            </IconButton>\n                            <Typography variant={'h6'} component={'div'} className={'py-1 text-truncate'}>\n                                {props.video.snippet.title || 'Untitled'}\n                                <Typography variant={'body2'} style={{opacity: '50%'}}>\n                                    {props.video.snippet.channelTitle || 'Unavailable'}\n                                </Typography>\n                            </Typography>\n                            <div style={{flex: '1 1 auto'}}/>\n                            <>\n                                {\n                                    downloadButton\n                                }\n                            </>\n                        </Toolbar>\n                    </AppBar>\n                    <div>\n                        <div style={{backgroundImage: props.thumbnail}}\n                             className={'ImageCircle rounded-circle thumbnail'}>\n                            <img src={props.thumbnail}\n                                 className={'image img-fluid roun1ded-circle border'}\n                                 style={{\n                                     width: 'auto',\n                                     height: '100%',\n                                     position: 'absolute',\n                                     top: '50%',\n                                     left: '50%',\n                                     transform: 'translate(-50%, -50%)'\n                                 }}/>\n                        </div>\n                        <div id={'waveForm'} style={{width: '100%'}}/>\n                    </div>\n                    <AppBar color=\"primary\" style={{\n                        position: 'fixed',\n                        top: \"auto\",\n                        bottom: 0,\n                        width: '100%',\n                        backgroundColor: '#FEFEFE'\n                    }} component={'div'}>\n                        <Slider\n                            className={'container'}\n                            defaultValue={0}\n                            value={scrubbing}\n                            min={0.0}\n                            max={audioElement.duration}\n                            valueLabelDisplay=\"auto\"\n                            onChangeCommitted={async (v, x) => handleScrubbing(x)}\n                        />\n                        {looping}\n                        <div className={'container mb-2'} style={{\n                            width: '70%',\n                            display: 'inline-flex',\n                            justifyContent: 'space-around',\n                            transform: 'translate(0%)'\n                        }}>\n                            <IconButton><SkipPrevious/></IconButton>\n                            <div className={'ExpandedPlayButtonContainer'}>\n                                {button}\n                            </div>\n                            <IconButton><SkipNext/></IconButton>\n                        </div>\n                    </AppBar>\n                </Dialog>\n            </div>\n        </div>\n    );\n};\n\nPlayer.propTypes = {};\nPlayer.defaultProps = {};\n\nexport default Player;\n/*\n\n                            <Slider\n                                defaultValue={1.0}\n                                aria-labelledby=\"discrete-slider-small-steps\"\n                                step={0.001}\n                                marks\n                                min={0.0}\n                                max={1.0}\n                                getAriaValueText={handleVolume}\n                                valueLabelDisplay=\"auto\"\n                            />\n\n */\n",
    "import React from 'react';\nimport './SongCard.css';\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport {Typography} from \"@material-ui/core\";\nimport {getSong} from \"../../functions/songs\";\nimport keys from \"../../api/keys/keys\";\nimport Player from \"../Player/Player\";\n\n// = {title, description, tags, channelTitle, videoId, thumbnail}\nfunction SongCard(props) {\n    const video_ = props.video.snippet;\n    return (\n        <Card className={'SongCard'} onClick={() => props.onPlay(props.video)}>\n            <CardActionArea>\n                <CardMedia\n                    component=\"img\"\n                    alt=\"Contemplative Reptile\"\n                    height=\"140\"\n                    image={video_.thumbnails.standard.url}\n                    title={video_.title}\n                    loading={'lazy'}\n\n                />\n                <CardContent className={'text-left'}>\n                    <Typography gutterBottom variant=\"h6\" component=\"p\" className={'text-truncate'}>\n                        {video_.title.slice(0, 70) + \" ...\"}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" className={'text-truncate'}>\n                        {video_.description.slice(0, 70) + \" ...\"}\n                        <span className={'text-muted'}>\n                        {video_.channelTitle}\n                    </span>\n                    </Typography>\n                </CardContent>\n            </CardActionArea>\n        </Card>\n    );\n}\n\nSongCard.propTypes = {};\n\nSongCard.defaultProps = {};\n\nexport default SongCard;\n",
    "import React from 'react';\nimport './CustomAppBar.css';\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Menu from \"@material-ui/core/Menu\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst CustomAppBar = () => (\n    <AppBar position=\"fixed\">\n        <Toolbar>\n            <IconButton edge=\"start\" color=\"primary\" aria-label=\"menu\">\n                <Menu/>\n            </IconButton>\n            <Typography variant=\"h6\">\n                Music\n            </Typography>\n        </Toolbar>\n    </AppBar>\n);\n\nCustomAppBar.propTypes = {};\n\nCustomAppBar.defaultProps = {};\n\nexport default CustomAppBar;\n",
    "import React from 'react';\nimport './home.css';\nimport {Container, CssBaseline, Typography} from \"@material-ui/core\";\nimport keys from \"../../api/keys/keys\";\nimport endPoints from \"../../api/endpoints/endpoints\";\nimport SongCard from \"../SongCard/SongCard\";\nimport CustomAppBar from \"../CustomAppBar/CustomAppBar\";\nimport {getSong} from \"../../functions/songs\";\n\n\nconst HomeComponent = (props) => {\n    const [popular, setPopular] = React.useState(() => {\n        fetch(endPoints.mostPopularFake(keys.youtube))\n            .then(v => v.json())\n            .then(value => {\n                setPopular(value.items.map((video, index) => {\n                    return (<SongCard onPlay={PlaySong} key={index} video={video}/>)\n                }));\n            });\n    });\n    function PlaySong(data) {\n        getSong(keys.youtube, data.id).then(value => {\n            return props.appState({uri: value, thumbnail: data.snippet.thumbnails.maxres.url, video: data});\n            /* setAudioElemet(<div/>); setAudioElemet(<Player audio={new Audio(value)} thumbnail={data.snippet.thumbnails.maxres.url} video={data}/> */\n        });\n    }\n\n    return (\n        <div className=\"home\">\n            <CssBaseline/>\n            <CustomAppBar/>\n            <div style={{marginTop: '5rem'}}>\n                <Typography variant={'h5'} className={'pl-3 text-left'}>\n                    Trending Now\n                </Typography>\n                <Container maxWidth=\"xl\" className={'px-0 mx-0'}>\n                    <div className={'cardSlider Slider'}>\n                        {popular}\n                    </div>\n                </Container>\n            </div>\n        </div>\n    );\n};\n\nHomeComponent.propTypes = {};\n\nHomeComponent.defaultProps = {};\n\nexport default HomeComponent;\n",
    "import React from 'react';\nimport './CustomBottomNavigation.css';\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\nimport {Folder, GetApp, Home, LocationOn} from \"@material-ui/icons\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport {Link} from \"react-router-dom\";\nimport Player from \"../Player/Player\";\n\nconst useStyles = makeStyles({\n    root: {\n        width: '100%',\n    },\n});\nconst CustomBottomNavigation = () => {\n    const classes = useStyles();\n    const [value, setValue] = React.useState('recents');\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    return (\n        <>\n            <AppBar color=\"primary\" style={{position: 'fixed', top: \"auto\", bottom: 0, width: '100%',}}\n                    component={'div'}>\n                <BottomNavigation value={value} onChange={handleChange} className={classes.root}>\n                    <BottomNavigationAction component={Link} to={'/home'} label=\"Home\" value=\"recents\" icon={<Home/>}/>\n                    <BottomNavigationAction component={Link} to={'/downloads'} label=\"Downloads\" value=\"favorites\"\n                                            icon={<GetApp/>}/>\n                    <BottomNavigationAction label=\"Nearby\" value=\"nearby\" icon={<LocationOn/>}/>\n                    <BottomNavigationAction label=\"Folder\" value=\"folder\" icon={<Folder/>}/>\n                </BottomNavigation>\n            </AppBar>\n        </>\n    );\n};\n\nCustomBottomNavigation.propTypes = {};\n\nCustomBottomNavigation.defaultProps = {};\n\nexport default CustomBottomNavigation;\n",
    "import React from 'react';\nimport './DownloadListItem.css';\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Typography from \"@material-ui/core/Typography\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\nconst useStyles = makeStyles((theme) => ({\n    inline: {\n        display: 'inline',\n    },\n}));\nconst DownloadListItem = (props) => {\n\n    const classes = useStyles();\n    return (<ListItem alignItems=\"flex-start\">\n            <ListItemAvatar>\n                <Avatar alt={props.title} src={props.thumbnail}/>\n            </ListItemAvatar>\n            <ListItemText\n                primary={props.title}\n                secondary={\n                    <React.Fragment>\n                        <Typography\n                            component=\"span\"\n                            variant=\"body2\"\n                            className={classes.inline}\n                            color=\"textPrimary\"\n                        >\n                            {props.channelTitle}\n                        </Typography>\n                        {props.tags}\n                    </React.Fragment>\n                }\n            />\n        </ListItem>\n    )\n};\n\nDownloadListItem.propTypes = {};\n\nDownloadListItem.defaultProps = {};\n\nexport default DownloadListItem;\n",
    "import React, {useEffect} from 'react';\nimport './Downloads.css';\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {getHistory} from \"../../functions/songs\";\nimport DownloadListItem from \"../DownloadListItem/DownloadListItem\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        maxWidth: '100%',\n        backgroundColor: theme.palette.background.paper,\n    },\n    inline: {\n        display: 'inline',\n    },\n}));\n\n\nconst Downloads = () => {\n    const classes = useStyles();\n    const [HistoryItems, setHistoryItems] = React.useState(<></>);\n\n    function createList() {\n        getHistory().then(value => {\n            setHistoryItems(() => {\n                return value.map((v, i) => {\n                    const divider_ = i = value.length ? <div/> : <Divider variant=\"inset\" component=\"li\"/>;\n                    return <><DownloadListItem key={i} title={v.title} channelTitle={v.channelTitle}\n                                             thumbnail={v.thumbnail} tags={v.tags}/>{divider_}</>\n                });\n            });\n        })\n    }\n\n    useEffect(() => {\n        createList();\n    }, []);\n\n    return (\n        <List className={classes.root}>\n            {HistoryItems}\n        </List>\n    );\n};\n\nDownloads.propTypes = {};\n\nDownloads.defaultProps = {};\n\nexport default Downloads;\n",
    "import React from 'react';\nimport './App.css';\nimport HomeComponent from \"./components/home/home\";\nimport {BrowserRouter as Router, Route} from \"react-router-dom\";\nimport CustomBottomNavigation from \"./components/CustomBottomNavigation/CustomBottomNavigation\";\nimport Downloads from \"./components/Downloads/Downloads\";\nimport Player from \"./components/Player/Player\";\n\n\nfunction App() {\n    const audio = new Audio('');\n    const [PlayerState, setPlayerState] = React.useState({\n        audio: audio,\n        uri: '',\n        thumbnail: '',\n        video: {snippet: {}},\n        hidden: true\n    });\n    /*\n    function changeStates(i) {\n        setPlayerState({\n            audio: audio,\n            uri: \"\",\n            thumbnail: \"\",\n            video: {snippet: {}},\n            hidden: !0\n        }), i.thumbnail && i.video && i.uri ? (i.hidden = !1) : (i.hidden = !0), (audio.src = i.uri), setPlayerState({audio: audio, ...i});\n    }*/\n\n    function changeStates(state) {\n        setPlayerState({audio: audio, uri: '', thumbnail: '', video: {snippet: {}}, hidden: true});\n        state.thumbnail && state.video && state.uri ? state.hidden = false : state.hidden = true;\n        audio.src = state.uri;\n        setPlayerState({audio: audio, ...state});\n    }\n\n    return (\n        <Router>\n            <div className=\"App\">\n                <Player audio={PlayerState.audio} thumbnail={PlayerState.thumbnail} video={PlayerState.video}\n                        hidden={PlayerState.hidden}/>\n                <Route path={'/home'} render={() => <HomeComponent appState={changeStates}/>}/>\n                <Route path={'/downloads'} component={Downloads}/>\n                <CustomBottomNavigation/>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n",
    "// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n              'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                    'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n\n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n\n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: {'Service-Worker': 'script'},\n  })\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n            response.status === 404 ||\n            (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n            'No internet connection found. App is running in offline mode.'\n        );\n      });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n        .then(registration => {\n          registration.unregister();\n        })\n        .catch(error => {\n          console.error(error.message);\n        });\n  }\n}\n",
    "import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n",
    "const endPoints = {\r\n    mostPopular: key => `https://www.googleapis.com/youtube/v3/videos?part=snippet&videoCategoryId=10&type=video&key=${key}&chart=mostPopular`,\r\n    mostPopularFake: key => `https://cdn.jsdelivr.net/gh/kabeer11000/sample-response/yt-api/yt.json`,\r\n    getVideo: (key, id) => `https://www.googleapis.com/youtube/v3/videos?part=snippet&id=${id}&key=${key}`,\r\n    getVideoFake: (key, id) => `https://cdn.jsdelivr.net/gh/kabeer11000/sample-response@master/yt-api/video-.json`,\r\n    getProxyfiedURI: (id) => `http://localhost:5000/song?id=${id}`,\r\n};\r\nmodule.exports = endPoints;\r\n",
    "const keys = {\r\n    youtube: 'AIzaSyB1msCdExGF2q9oyAjUq4bmSQq6i89VId8'\r\n};\r\nmodule.exports = keys;\r\n"
  ],
  "sourceRoot": ""
}
